//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Schools_Management_System.Report_For_Payment {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("StudentPaymentSystemsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class StudentPaymentSystemsDataSet : global::System.Data.DataSet {
        
        private StudentInformationDataTable tableStudentInformation;
        
        private PresentAddressDataTable tablePresentAddress;
        
        private PermanentAddressDataTable tablePermanentAddress;
        
        private ImagesForAllDataTable tableImagesForAll;
        
        private GuirdianInformationDataTable tableGuirdianInformation;
        
        private StudentShiftInfoDataTable tableStudentShiftInfo;
        
        private StudentMonthlyFeesDataDataTable tableStudentMonthlyFeesData;
        
        private StudentMonthlyFeesAmountDataTable tableStudentMonthlyFeesAmount;
        
        private StudentMonthlyFeeDataTable tableStudentMonthlyFee;
        
        private global::System.Data.DataRelation relationFK_StudentInformation_StudentShiftInfo;
        
        private global::System.Data.DataRelation relationFK_PresentAddress_StudentInformation;
        
        private global::System.Data.DataRelation relationFK_PermanentAddress_StudentInformation;
        
        private global::System.Data.DataRelation relationFK_ImagesForAll_StudentInformation;
        
        private global::System.Data.DataRelation relationFK_GuirdianInformation_StudentInformation;
        
        private global::System.Data.DataRelation relationFK_StudentMonthlyFeesData_StudentInformation;
        
        private global::System.Data.DataRelation relationFK_StudentMonthlyFeesAmount_StudentInformation;
        
        private global::System.Data.DataRelation relationFK_StudentMonthlyFee_StudentInformation;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public StudentPaymentSystemsDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected StudentPaymentSystemsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["StudentInformation"] != null)) {
                    base.Tables.Add(new StudentInformationDataTable(ds.Tables["StudentInformation"]));
                }
                if ((ds.Tables["PresentAddress"] != null)) {
                    base.Tables.Add(new PresentAddressDataTable(ds.Tables["PresentAddress"]));
                }
                if ((ds.Tables["PermanentAddress"] != null)) {
                    base.Tables.Add(new PermanentAddressDataTable(ds.Tables["PermanentAddress"]));
                }
                if ((ds.Tables["ImagesForAll"] != null)) {
                    base.Tables.Add(new ImagesForAllDataTable(ds.Tables["ImagesForAll"]));
                }
                if ((ds.Tables["GuirdianInformation"] != null)) {
                    base.Tables.Add(new GuirdianInformationDataTable(ds.Tables["GuirdianInformation"]));
                }
                if ((ds.Tables["StudentShiftInfo"] != null)) {
                    base.Tables.Add(new StudentShiftInfoDataTable(ds.Tables["StudentShiftInfo"]));
                }
                if ((ds.Tables["StudentMonthlyFeesData"] != null)) {
                    base.Tables.Add(new StudentMonthlyFeesDataDataTable(ds.Tables["StudentMonthlyFeesData"]));
                }
                if ((ds.Tables["StudentMonthlyFeesAmount"] != null)) {
                    base.Tables.Add(new StudentMonthlyFeesAmountDataTable(ds.Tables["StudentMonthlyFeesAmount"]));
                }
                if ((ds.Tables["StudentMonthlyFee"] != null)) {
                    base.Tables.Add(new StudentMonthlyFeeDataTable(ds.Tables["StudentMonthlyFee"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StudentInformationDataTable StudentInformation {
            get {
                return this.tableStudentInformation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PresentAddressDataTable PresentAddress {
            get {
                return this.tablePresentAddress;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PermanentAddressDataTable PermanentAddress {
            get {
                return this.tablePermanentAddress;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ImagesForAllDataTable ImagesForAll {
            get {
                return this.tableImagesForAll;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GuirdianInformationDataTable GuirdianInformation {
            get {
                return this.tableGuirdianInformation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StudentShiftInfoDataTable StudentShiftInfo {
            get {
                return this.tableStudentShiftInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StudentMonthlyFeesDataDataTable StudentMonthlyFeesData {
            get {
                return this.tableStudentMonthlyFeesData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StudentMonthlyFeesAmountDataTable StudentMonthlyFeesAmount {
            get {
                return this.tableStudentMonthlyFeesAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StudentMonthlyFeeDataTable StudentMonthlyFee {
            get {
                return this.tableStudentMonthlyFee;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            StudentPaymentSystemsDataSet cln = ((StudentPaymentSystemsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["StudentInformation"] != null)) {
                    base.Tables.Add(new StudentInformationDataTable(ds.Tables["StudentInformation"]));
                }
                if ((ds.Tables["PresentAddress"] != null)) {
                    base.Tables.Add(new PresentAddressDataTable(ds.Tables["PresentAddress"]));
                }
                if ((ds.Tables["PermanentAddress"] != null)) {
                    base.Tables.Add(new PermanentAddressDataTable(ds.Tables["PermanentAddress"]));
                }
                if ((ds.Tables["ImagesForAll"] != null)) {
                    base.Tables.Add(new ImagesForAllDataTable(ds.Tables["ImagesForAll"]));
                }
                if ((ds.Tables["GuirdianInformation"] != null)) {
                    base.Tables.Add(new GuirdianInformationDataTable(ds.Tables["GuirdianInformation"]));
                }
                if ((ds.Tables["StudentShiftInfo"] != null)) {
                    base.Tables.Add(new StudentShiftInfoDataTable(ds.Tables["StudentShiftInfo"]));
                }
                if ((ds.Tables["StudentMonthlyFeesData"] != null)) {
                    base.Tables.Add(new StudentMonthlyFeesDataDataTable(ds.Tables["StudentMonthlyFeesData"]));
                }
                if ((ds.Tables["StudentMonthlyFeesAmount"] != null)) {
                    base.Tables.Add(new StudentMonthlyFeesAmountDataTable(ds.Tables["StudentMonthlyFeesAmount"]));
                }
                if ((ds.Tables["StudentMonthlyFee"] != null)) {
                    base.Tables.Add(new StudentMonthlyFeeDataTable(ds.Tables["StudentMonthlyFee"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableStudentInformation = ((StudentInformationDataTable)(base.Tables["StudentInformation"]));
            if ((initTable == true)) {
                if ((this.tableStudentInformation != null)) {
                    this.tableStudentInformation.InitVars();
                }
            }
            this.tablePresentAddress = ((PresentAddressDataTable)(base.Tables["PresentAddress"]));
            if ((initTable == true)) {
                if ((this.tablePresentAddress != null)) {
                    this.tablePresentAddress.InitVars();
                }
            }
            this.tablePermanentAddress = ((PermanentAddressDataTable)(base.Tables["PermanentAddress"]));
            if ((initTable == true)) {
                if ((this.tablePermanentAddress != null)) {
                    this.tablePermanentAddress.InitVars();
                }
            }
            this.tableImagesForAll = ((ImagesForAllDataTable)(base.Tables["ImagesForAll"]));
            if ((initTable == true)) {
                if ((this.tableImagesForAll != null)) {
                    this.tableImagesForAll.InitVars();
                }
            }
            this.tableGuirdianInformation = ((GuirdianInformationDataTable)(base.Tables["GuirdianInformation"]));
            if ((initTable == true)) {
                if ((this.tableGuirdianInformation != null)) {
                    this.tableGuirdianInformation.InitVars();
                }
            }
            this.tableStudentShiftInfo = ((StudentShiftInfoDataTable)(base.Tables["StudentShiftInfo"]));
            if ((initTable == true)) {
                if ((this.tableStudentShiftInfo != null)) {
                    this.tableStudentShiftInfo.InitVars();
                }
            }
            this.tableStudentMonthlyFeesData = ((StudentMonthlyFeesDataDataTable)(base.Tables["StudentMonthlyFeesData"]));
            if ((initTable == true)) {
                if ((this.tableStudentMonthlyFeesData != null)) {
                    this.tableStudentMonthlyFeesData.InitVars();
                }
            }
            this.tableStudentMonthlyFeesAmount = ((StudentMonthlyFeesAmountDataTable)(base.Tables["StudentMonthlyFeesAmount"]));
            if ((initTable == true)) {
                if ((this.tableStudentMonthlyFeesAmount != null)) {
                    this.tableStudentMonthlyFeesAmount.InitVars();
                }
            }
            this.tableStudentMonthlyFee = ((StudentMonthlyFeeDataTable)(base.Tables["StudentMonthlyFee"]));
            if ((initTable == true)) {
                if ((this.tableStudentMonthlyFee != null)) {
                    this.tableStudentMonthlyFee.InitVars();
                }
            }
            this.relationFK_StudentInformation_StudentShiftInfo = this.Relations["FK_StudentInformation_StudentShiftInfo"];
            this.relationFK_PresentAddress_StudentInformation = this.Relations["FK_PresentAddress_StudentInformation"];
            this.relationFK_PermanentAddress_StudentInformation = this.Relations["FK_PermanentAddress_StudentInformation"];
            this.relationFK_ImagesForAll_StudentInformation = this.Relations["FK_ImagesForAll_StudentInformation"];
            this.relationFK_GuirdianInformation_StudentInformation = this.Relations["FK_GuirdianInformation_StudentInformation"];
            this.relationFK_StudentMonthlyFeesData_StudentInformation = this.Relations["FK_StudentMonthlyFeesData_StudentInformation"];
            this.relationFK_StudentMonthlyFeesAmount_StudentInformation = this.Relations["FK_StudentMonthlyFeesAmount_StudentInformation"];
            this.relationFK_StudentMonthlyFee_StudentInformation = this.Relations["FK_StudentMonthlyFee_StudentInformation"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "StudentPaymentSystemsDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/StudentPaymentSystemsDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStudentInformation = new StudentInformationDataTable();
            base.Tables.Add(this.tableStudentInformation);
            this.tablePresentAddress = new PresentAddressDataTable();
            base.Tables.Add(this.tablePresentAddress);
            this.tablePermanentAddress = new PermanentAddressDataTable();
            base.Tables.Add(this.tablePermanentAddress);
            this.tableImagesForAll = new ImagesForAllDataTable();
            base.Tables.Add(this.tableImagesForAll);
            this.tableGuirdianInformation = new GuirdianInformationDataTable();
            base.Tables.Add(this.tableGuirdianInformation);
            this.tableStudentShiftInfo = new StudentShiftInfoDataTable();
            base.Tables.Add(this.tableStudentShiftInfo);
            this.tableStudentMonthlyFeesData = new StudentMonthlyFeesDataDataTable();
            base.Tables.Add(this.tableStudentMonthlyFeesData);
            this.tableStudentMonthlyFeesAmount = new StudentMonthlyFeesAmountDataTable();
            base.Tables.Add(this.tableStudentMonthlyFeesAmount);
            this.tableStudentMonthlyFee = new StudentMonthlyFeeDataTable();
            base.Tables.Add(this.tableStudentMonthlyFee);
            this.relationFK_StudentInformation_StudentShiftInfo = new global::System.Data.DataRelation("FK_StudentInformation_StudentShiftInfo", new global::System.Data.DataColumn[] {
                        this.tableStudentShiftInfo.ShiftIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStudentInformation.ShiftIDColumn}, false);
            this.Relations.Add(this.relationFK_StudentInformation_StudentShiftInfo);
            this.relationFK_PresentAddress_StudentInformation = new global::System.Data.DataRelation("FK_PresentAddress_StudentInformation", new global::System.Data.DataColumn[] {
                        this.tableStudentInformation.StudentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePresentAddress.StudentIDColumn}, false);
            this.Relations.Add(this.relationFK_PresentAddress_StudentInformation);
            this.relationFK_PermanentAddress_StudentInformation = new global::System.Data.DataRelation("FK_PermanentAddress_StudentInformation", new global::System.Data.DataColumn[] {
                        this.tableStudentInformation.StudentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePermanentAddress.StudentIDColumn}, false);
            this.Relations.Add(this.relationFK_PermanentAddress_StudentInformation);
            this.relationFK_ImagesForAll_StudentInformation = new global::System.Data.DataRelation("FK_ImagesForAll_StudentInformation", new global::System.Data.DataColumn[] {
                        this.tableStudentInformation.StudentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableImagesForAll.StudentIDColumn}, false);
            this.Relations.Add(this.relationFK_ImagesForAll_StudentInformation);
            this.relationFK_GuirdianInformation_StudentInformation = new global::System.Data.DataRelation("FK_GuirdianInformation_StudentInformation", new global::System.Data.DataColumn[] {
                        this.tableStudentInformation.StudentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableGuirdianInformation.StudentIDColumn}, false);
            this.Relations.Add(this.relationFK_GuirdianInformation_StudentInformation);
            this.relationFK_StudentMonthlyFeesData_StudentInformation = new global::System.Data.DataRelation("FK_StudentMonthlyFeesData_StudentInformation", new global::System.Data.DataColumn[] {
                        this.tableStudentInformation.StudentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStudentMonthlyFeesData.StudentIDColumn}, false);
            this.Relations.Add(this.relationFK_StudentMonthlyFeesData_StudentInformation);
            this.relationFK_StudentMonthlyFeesAmount_StudentInformation = new global::System.Data.DataRelation("FK_StudentMonthlyFeesAmount_StudentInformation", new global::System.Data.DataColumn[] {
                        this.tableStudentInformation.StudentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStudentMonthlyFeesAmount.StudentIDColumn}, false);
            this.Relations.Add(this.relationFK_StudentMonthlyFeesAmount_StudentInformation);
            this.relationFK_StudentMonthlyFee_StudentInformation = new global::System.Data.DataRelation("FK_StudentMonthlyFee_StudentInformation", new global::System.Data.DataColumn[] {
                        this.tableStudentInformation.StudentIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStudentMonthlyFee.StudentIDColumn}, false);
            this.Relations.Add(this.relationFK_StudentMonthlyFee_StudentInformation);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeStudentInformation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePresentAddress() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePermanentAddress() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeImagesForAll() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeGuirdianInformation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeStudentShiftInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeStudentMonthlyFeesData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeStudentMonthlyFeesAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeStudentMonthlyFee() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            StudentPaymentSystemsDataSet ds = new StudentPaymentSystemsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void StudentInformationRowChangeEventHandler(object sender, StudentInformationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PresentAddressRowChangeEventHandler(object sender, PresentAddressRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PermanentAddressRowChangeEventHandler(object sender, PermanentAddressRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ImagesForAllRowChangeEventHandler(object sender, ImagesForAllRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void GuirdianInformationRowChangeEventHandler(object sender, GuirdianInformationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void StudentShiftInfoRowChangeEventHandler(object sender, StudentShiftInfoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void StudentMonthlyFeesDataRowChangeEventHandler(object sender, StudentMonthlyFeesDataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void StudentMonthlyFeesAmountRowChangeEventHandler(object sender, StudentMonthlyFeesAmountRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void StudentMonthlyFeeRowChangeEventHandler(object sender, StudentMonthlyFeeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StudentInformationDataTable : global::System.Data.TypedTableBase<StudentInformationRow> {
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnStudentName;
            
            private global::System.Data.DataColumn _columnStudentFather_sName;
            
            private global::System.Data.DataColumn _columnStudentMother_sName;
            
            private global::System.Data.DataColumn columnDateOfBirth;
            
            private global::System.Data.DataColumn columnStudentAge;
            
            private global::System.Data.DataColumn columnStudentStandar;
            
            private global::System.Data.DataColumn columnSudentRollNo;
            
            private global::System.Data.DataColumn columnStudentBirthReg;
            
            private global::System.Data.DataColumn columnStudentEmail;
            
            private global::System.Data.DataColumn columnSudentSession;
            
            private global::System.Data.DataColumn columnStudentGender;
            
            private global::System.Data.DataColumn columnStudentMobile;
            
            private global::System.Data.DataColumn columnStudentNationality;
            
            private global::System.Data.DataColumn columnShiftID;
            
            private global::System.Data.DataColumn columnStudentAdmissionDate;
            
            private global::System.Data.DataColumn columnStudentDurations;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationDataTable() {
                this.TableName = "StudentInformation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentInformationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected StudentInformationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentNameColumn {
                get {
                    return this.columnStudentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _StudentFather_sNameColumn {
                get {
                    return this._columnStudentFather_sName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _StudentMother_sNameColumn {
                get {
                    return this._columnStudentMother_sName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DateOfBirthColumn {
                get {
                    return this.columnDateOfBirth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentAgeColumn {
                get {
                    return this.columnStudentAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentStandarColumn {
                get {
                    return this.columnStudentStandar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SudentRollNoColumn {
                get {
                    return this.columnSudentRollNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentBirthRegColumn {
                get {
                    return this.columnStudentBirthReg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentEmailColumn {
                get {
                    return this.columnStudentEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SudentSessionColumn {
                get {
                    return this.columnSudentSession;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentGenderColumn {
                get {
                    return this.columnStudentGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentMobileColumn {
                get {
                    return this.columnStudentMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentNationalityColumn {
                get {
                    return this.columnStudentNationality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShiftIDColumn {
                get {
                    return this.columnShiftID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentAdmissionDateColumn {
                get {
                    return this.columnStudentAdmissionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentDurationsColumn {
                get {
                    return this.columnStudentDurations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow this[int index] {
                get {
                    return ((StudentInformationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentInformationRowChangeEventHandler StudentInformationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentInformationRowChangeEventHandler StudentInformationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentInformationRowChangeEventHandler StudentInformationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentInformationRowChangeEventHandler StudentInformationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddStudentInformationRow(StudentInformationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow AddStudentInformationRow(
                        string StudentName, 
                        string _StudentFather_sName, 
                        string _StudentMother_sName, 
                        System.DateTime DateOfBirth, 
                        string StudentAge, 
                        string StudentStandar, 
                        string SudentRollNo, 
                        string StudentBirthReg, 
                        string StudentEmail, 
                        string SudentSession, 
                        string StudentGender, 
                        string StudentMobile, 
                        string StudentNationality, 
                        StudentShiftInfoRow parentStudentShiftInfoRowByFK_StudentInformation_StudentShiftInfo, 
                        System.DateTime StudentAdmissionDate, 
                        string StudentDurations) {
                StudentInformationRow rowStudentInformationRow = ((StudentInformationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        StudentName,
                        _StudentFather_sName,
                        _StudentMother_sName,
                        DateOfBirth,
                        StudentAge,
                        StudentStandar,
                        SudentRollNo,
                        StudentBirthReg,
                        StudentEmail,
                        SudentSession,
                        StudentGender,
                        StudentMobile,
                        StudentNationality,
                        null,
                        StudentAdmissionDate,
                        StudentDurations};
                if ((parentStudentShiftInfoRowByFK_StudentInformation_StudentShiftInfo != null)) {
                    columnValuesArray[14] = parentStudentShiftInfoRowByFK_StudentInformation_StudentShiftInfo[0];
                }
                rowStudentInformationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStudentInformationRow);
                return rowStudentInformationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow FindByStudentID(int StudentID) {
                return ((StudentInformationRow)(this.Rows.Find(new object[] {
                            StudentID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StudentInformationDataTable cln = ((StudentInformationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StudentInformationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnStudentID = base.Columns["StudentID"];
                this.columnStudentName = base.Columns["StudentName"];
                this._columnStudentFather_sName = base.Columns["StudentFather\'sName"];
                this._columnStudentMother_sName = base.Columns["StudentMother\'sName"];
                this.columnDateOfBirth = base.Columns["DateOfBirth"];
                this.columnStudentAge = base.Columns["StudentAge"];
                this.columnStudentStandar = base.Columns["StudentStandar"];
                this.columnSudentRollNo = base.Columns["SudentRollNo"];
                this.columnStudentBirthReg = base.Columns["StudentBirthReg"];
                this.columnStudentEmail = base.Columns["StudentEmail"];
                this.columnSudentSession = base.Columns["SudentSession"];
                this.columnStudentGender = base.Columns["StudentGender"];
                this.columnStudentMobile = base.Columns["StudentMobile"];
                this.columnStudentNationality = base.Columns["StudentNationality"];
                this.columnShiftID = base.Columns["ShiftID"];
                this.columnStudentAdmissionDate = base.Columns["StudentAdmissionDate"];
                this.columnStudentDurations = base.Columns["StudentDurations"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnStudentName = new global::System.Data.DataColumn("StudentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentName);
                this._columnStudentFather_sName = new global::System.Data.DataColumn("StudentFather\'sName", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnStudentFather_sName.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnStudentFather_sName");
                this._columnStudentFather_sName.ExtendedProperties.Add("Generator_UserColumnName", "StudentFather\'sName");
                base.Columns.Add(this._columnStudentFather_sName);
                this._columnStudentMother_sName = new global::System.Data.DataColumn("StudentMother\'sName", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnStudentMother_sName.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnStudentMother_sName");
                this._columnStudentMother_sName.ExtendedProperties.Add("Generator_UserColumnName", "StudentMother\'sName");
                base.Columns.Add(this._columnStudentMother_sName);
                this.columnDateOfBirth = new global::System.Data.DataColumn("DateOfBirth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfBirth);
                this.columnStudentAge = new global::System.Data.DataColumn("StudentAge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentAge);
                this.columnStudentStandar = new global::System.Data.DataColumn("StudentStandar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentStandar);
                this.columnSudentRollNo = new global::System.Data.DataColumn("SudentRollNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSudentRollNo);
                this.columnStudentBirthReg = new global::System.Data.DataColumn("StudentBirthReg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentBirthReg);
                this.columnStudentEmail = new global::System.Data.DataColumn("StudentEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentEmail);
                this.columnSudentSession = new global::System.Data.DataColumn("SudentSession", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSudentSession);
                this.columnStudentGender = new global::System.Data.DataColumn("StudentGender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentGender);
                this.columnStudentMobile = new global::System.Data.DataColumn("StudentMobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentMobile);
                this.columnStudentNationality = new global::System.Data.DataColumn("StudentNationality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentNationality);
                this.columnShiftID = new global::System.Data.DataColumn("ShiftID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShiftID);
                this.columnStudentAdmissionDate = new global::System.Data.DataColumn("StudentAdmissionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentAdmissionDate);
                this.columnStudentDurations = new global::System.Data.DataColumn("StudentDurations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentDurations);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStudentID}, true));
                this.columnStudentID.AutoIncrement = true;
                this.columnStudentID.AutoIncrementSeed = -1;
                this.columnStudentID.AutoIncrementStep = -1;
                this.columnStudentID.AllowDBNull = false;
                this.columnStudentID.ReadOnly = true;
                this.columnStudentID.Unique = true;
                this.columnStudentName.AllowDBNull = false;
                this.columnStudentName.MaxLength = 100;
                this._columnStudentFather_sName.AllowDBNull = false;
                this._columnStudentFather_sName.MaxLength = 100;
                this._columnStudentMother_sName.AllowDBNull = false;
                this._columnStudentMother_sName.MaxLength = 100;
                this.columnDateOfBirth.AllowDBNull = false;
                this.columnStudentAge.AllowDBNull = false;
                this.columnStudentAge.MaxLength = 50;
                this.columnStudentStandar.AllowDBNull = false;
                this.columnStudentStandar.MaxLength = 10;
                this.columnSudentRollNo.AllowDBNull = false;
                this.columnSudentRollNo.MaxLength = 50;
                this.columnStudentBirthReg.AllowDBNull = false;
                this.columnStudentBirthReg.MaxLength = 20;
                this.columnStudentEmail.AllowDBNull = false;
                this.columnStudentEmail.MaxLength = 100;
                this.columnSudentSession.AllowDBNull = false;
                this.columnSudentSession.MaxLength = 10;
                this.columnStudentGender.AllowDBNull = false;
                this.columnStudentGender.MaxLength = 10;
                this.columnStudentMobile.MaxLength = 15;
                this.columnStudentNationality.AllowDBNull = false;
                this.columnStudentNationality.MaxLength = 50;
                this.columnShiftID.AllowDBNull = false;
                this.columnStudentAdmissionDate.AllowDBNull = false;
                this.columnStudentDurations.AllowDBNull = false;
                this.columnStudentDurations.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow NewStudentInformationRow() {
                return ((StudentInformationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StudentInformationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StudentInformationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StudentInformationRowChanged != null)) {
                    this.StudentInformationRowChanged(this, new StudentInformationRowChangeEvent(((StudentInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StudentInformationRowChanging != null)) {
                    this.StudentInformationRowChanging(this, new StudentInformationRowChangeEvent(((StudentInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StudentInformationRowDeleted != null)) {
                    this.StudentInformationRowDeleted(this, new StudentInformationRowChangeEvent(((StudentInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StudentInformationRowDeleting != null)) {
                    this.StudentInformationRowDeleting(this, new StudentInformationRowChangeEvent(((StudentInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveStudentInformationRow(StudentInformationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StudentPaymentSystemsDataSet ds = new StudentPaymentSystemsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StudentInformationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PresentAddressDataTable : global::System.Data.TypedTableBase<PresentAddressRow> {
            
            private global::System.Data.DataColumn columnPresentAddressID;
            
            private global::System.Data.DataColumn columnPresentVllage;
            
            private global::System.Data.DataColumn columnPresentRoad;
            
            private global::System.Data.DataColumn columnPresentDistrict;
            
            private global::System.Data.DataColumn columnPresentUpazila;
            
            private global::System.Data.DataColumn columnPresentPostOffice;
            
            private global::System.Data.DataColumn columnPresentPostCode;
            
            private global::System.Data.DataColumn columnStudentID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PresentAddressDataTable() {
                this.TableName = "PresentAddress";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PresentAddressDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PresentAddressDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PresentAddressIDColumn {
                get {
                    return this.columnPresentAddressID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PresentVllageColumn {
                get {
                    return this.columnPresentVllage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PresentRoadColumn {
                get {
                    return this.columnPresentRoad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PresentDistrictColumn {
                get {
                    return this.columnPresentDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PresentUpazilaColumn {
                get {
                    return this.columnPresentUpazila;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PresentPostOfficeColumn {
                get {
                    return this.columnPresentPostOffice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PresentPostCodeColumn {
                get {
                    return this.columnPresentPostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PresentAddressRow this[int index] {
                get {
                    return ((PresentAddressRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PresentAddressRowChangeEventHandler PresentAddressRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PresentAddressRowChangeEventHandler PresentAddressRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PresentAddressRowChangeEventHandler PresentAddressRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PresentAddressRowChangeEventHandler PresentAddressRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPresentAddressRow(PresentAddressRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PresentAddressRow AddPresentAddressRow(string PresentVllage, string PresentRoad, string PresentDistrict, string PresentUpazila, string PresentPostOffice, string PresentPostCode, StudentInformationRow parentStudentInformationRowByFK_PresentAddress_StudentInformation) {
                PresentAddressRow rowPresentAddressRow = ((PresentAddressRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PresentVllage,
                        PresentRoad,
                        PresentDistrict,
                        PresentUpazila,
                        PresentPostOffice,
                        PresentPostCode,
                        null};
                if ((parentStudentInformationRowByFK_PresentAddress_StudentInformation != null)) {
                    columnValuesArray[7] = parentStudentInformationRowByFK_PresentAddress_StudentInformation[0];
                }
                rowPresentAddressRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPresentAddressRow);
                return rowPresentAddressRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PresentAddressRow FindByPresentAddressID(int PresentAddressID) {
                return ((PresentAddressRow)(this.Rows.Find(new object[] {
                            PresentAddressID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PresentAddressDataTable cln = ((PresentAddressDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PresentAddressDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPresentAddressID = base.Columns["PresentAddressID"];
                this.columnPresentVllage = base.Columns["PresentVllage"];
                this.columnPresentRoad = base.Columns["PresentRoad"];
                this.columnPresentDistrict = base.Columns["PresentDistrict"];
                this.columnPresentUpazila = base.Columns["PresentUpazila"];
                this.columnPresentPostOffice = base.Columns["PresentPostOffice"];
                this.columnPresentPostCode = base.Columns["PresentPostCode"];
                this.columnStudentID = base.Columns["StudentID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPresentAddressID = new global::System.Data.DataColumn("PresentAddressID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentAddressID);
                this.columnPresentVllage = new global::System.Data.DataColumn("PresentVllage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentVllage);
                this.columnPresentRoad = new global::System.Data.DataColumn("PresentRoad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentRoad);
                this.columnPresentDistrict = new global::System.Data.DataColumn("PresentDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentDistrict);
                this.columnPresentUpazila = new global::System.Data.DataColumn("PresentUpazila", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentUpazila);
                this.columnPresentPostOffice = new global::System.Data.DataColumn("PresentPostOffice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentPostOffice);
                this.columnPresentPostCode = new global::System.Data.DataColumn("PresentPostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentPostCode);
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPresentAddressID}, true));
                this.columnPresentAddressID.AutoIncrement = true;
                this.columnPresentAddressID.AutoIncrementSeed = -1;
                this.columnPresentAddressID.AutoIncrementStep = -1;
                this.columnPresentAddressID.AllowDBNull = false;
                this.columnPresentAddressID.ReadOnly = true;
                this.columnPresentAddressID.Unique = true;
                this.columnPresentVllage.AllowDBNull = false;
                this.columnPresentVllage.MaxLength = 50;
                this.columnPresentRoad.AllowDBNull = false;
                this.columnPresentRoad.MaxLength = 100;
                this.columnPresentDistrict.AllowDBNull = false;
                this.columnPresentDistrict.MaxLength = 100;
                this.columnPresentUpazila.AllowDBNull = false;
                this.columnPresentUpazila.MaxLength = 100;
                this.columnPresentPostOffice.AllowDBNull = false;
                this.columnPresentPostOffice.MaxLength = 50;
                this.columnPresentPostCode.AllowDBNull = false;
                this.columnPresentPostCode.MaxLength = 10;
                this.columnStudentID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PresentAddressRow NewPresentAddressRow() {
                return ((PresentAddressRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PresentAddressRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PresentAddressRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PresentAddressRowChanged != null)) {
                    this.PresentAddressRowChanged(this, new PresentAddressRowChangeEvent(((PresentAddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PresentAddressRowChanging != null)) {
                    this.PresentAddressRowChanging(this, new PresentAddressRowChangeEvent(((PresentAddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PresentAddressRowDeleted != null)) {
                    this.PresentAddressRowDeleted(this, new PresentAddressRowChangeEvent(((PresentAddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PresentAddressRowDeleting != null)) {
                    this.PresentAddressRowDeleting(this, new PresentAddressRowChangeEvent(((PresentAddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePresentAddressRow(PresentAddressRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StudentPaymentSystemsDataSet ds = new StudentPaymentSystemsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PresentAddressDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PermanentAddressDataTable : global::System.Data.TypedTableBase<PermanentAddressRow> {
            
            private global::System.Data.DataColumn columnPermanentAddressID;
            
            private global::System.Data.DataColumn columnPermanentVillage;
            
            private global::System.Data.DataColumn columnPermanentRoad;
            
            private global::System.Data.DataColumn columnPermanentDistrict;
            
            private global::System.Data.DataColumn columnPermanentUpazila;
            
            private global::System.Data.DataColumn columnPermanentPostOffice;
            
            private global::System.Data.DataColumn columnPermanentPostCode;
            
            private global::System.Data.DataColumn columnStudentID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PermanentAddressDataTable() {
                this.TableName = "PermanentAddress";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PermanentAddressDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PermanentAddressDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PermanentAddressIDColumn {
                get {
                    return this.columnPermanentAddressID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PermanentVillageColumn {
                get {
                    return this.columnPermanentVillage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PermanentRoadColumn {
                get {
                    return this.columnPermanentRoad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PermanentDistrictColumn {
                get {
                    return this.columnPermanentDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PermanentUpazilaColumn {
                get {
                    return this.columnPermanentUpazila;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PermanentPostOfficeColumn {
                get {
                    return this.columnPermanentPostOffice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PermanentPostCodeColumn {
                get {
                    return this.columnPermanentPostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PermanentAddressRow this[int index] {
                get {
                    return ((PermanentAddressRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PermanentAddressRowChangeEventHandler PermanentAddressRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PermanentAddressRowChangeEventHandler PermanentAddressRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PermanentAddressRowChangeEventHandler PermanentAddressRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PermanentAddressRowChangeEventHandler PermanentAddressRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPermanentAddressRow(PermanentAddressRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PermanentAddressRow AddPermanentAddressRow(string PermanentVillage, string PermanentRoad, string PermanentDistrict, string PermanentUpazila, string PermanentPostOffice, string PermanentPostCode, StudentInformationRow parentStudentInformationRowByFK_PermanentAddress_StudentInformation) {
                PermanentAddressRow rowPermanentAddressRow = ((PermanentAddressRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PermanentVillage,
                        PermanentRoad,
                        PermanentDistrict,
                        PermanentUpazila,
                        PermanentPostOffice,
                        PermanentPostCode,
                        null};
                if ((parentStudentInformationRowByFK_PermanentAddress_StudentInformation != null)) {
                    columnValuesArray[7] = parentStudentInformationRowByFK_PermanentAddress_StudentInformation[0];
                }
                rowPermanentAddressRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPermanentAddressRow);
                return rowPermanentAddressRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PermanentAddressRow FindByPermanentAddressID(int PermanentAddressID) {
                return ((PermanentAddressRow)(this.Rows.Find(new object[] {
                            PermanentAddressID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PermanentAddressDataTable cln = ((PermanentAddressDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PermanentAddressDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPermanentAddressID = base.Columns["PermanentAddressID"];
                this.columnPermanentVillage = base.Columns["PermanentVillage"];
                this.columnPermanentRoad = base.Columns["PermanentRoad"];
                this.columnPermanentDistrict = base.Columns["PermanentDistrict"];
                this.columnPermanentUpazila = base.Columns["PermanentUpazila"];
                this.columnPermanentPostOffice = base.Columns["PermanentPostOffice"];
                this.columnPermanentPostCode = base.Columns["PermanentPostCode"];
                this.columnStudentID = base.Columns["StudentID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPermanentAddressID = new global::System.Data.DataColumn("PermanentAddressID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermanentAddressID);
                this.columnPermanentVillage = new global::System.Data.DataColumn("PermanentVillage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermanentVillage);
                this.columnPermanentRoad = new global::System.Data.DataColumn("PermanentRoad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermanentRoad);
                this.columnPermanentDistrict = new global::System.Data.DataColumn("PermanentDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermanentDistrict);
                this.columnPermanentUpazila = new global::System.Data.DataColumn("PermanentUpazila", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermanentUpazila);
                this.columnPermanentPostOffice = new global::System.Data.DataColumn("PermanentPostOffice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermanentPostOffice);
                this.columnPermanentPostCode = new global::System.Data.DataColumn("PermanentPostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermanentPostCode);
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPermanentAddressID}, true));
                this.columnPermanentAddressID.AutoIncrement = true;
                this.columnPermanentAddressID.AutoIncrementSeed = -1;
                this.columnPermanentAddressID.AutoIncrementStep = -1;
                this.columnPermanentAddressID.AllowDBNull = false;
                this.columnPermanentAddressID.ReadOnly = true;
                this.columnPermanentAddressID.Unique = true;
                this.columnPermanentVillage.AllowDBNull = false;
                this.columnPermanentVillage.MaxLength = 50;
                this.columnPermanentRoad.AllowDBNull = false;
                this.columnPermanentRoad.MaxLength = 100;
                this.columnPermanentDistrict.AllowDBNull = false;
                this.columnPermanentDistrict.MaxLength = 100;
                this.columnPermanentUpazila.AllowDBNull = false;
                this.columnPermanentUpazila.MaxLength = 100;
                this.columnPermanentPostOffice.AllowDBNull = false;
                this.columnPermanentPostOffice.MaxLength = 50;
                this.columnPermanentPostCode.AllowDBNull = false;
                this.columnPermanentPostCode.MaxLength = 10;
                this.columnStudentID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PermanentAddressRow NewPermanentAddressRow() {
                return ((PermanentAddressRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PermanentAddressRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PermanentAddressRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PermanentAddressRowChanged != null)) {
                    this.PermanentAddressRowChanged(this, new PermanentAddressRowChangeEvent(((PermanentAddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PermanentAddressRowChanging != null)) {
                    this.PermanentAddressRowChanging(this, new PermanentAddressRowChangeEvent(((PermanentAddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PermanentAddressRowDeleted != null)) {
                    this.PermanentAddressRowDeleted(this, new PermanentAddressRowChangeEvent(((PermanentAddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PermanentAddressRowDeleting != null)) {
                    this.PermanentAddressRowDeleting(this, new PermanentAddressRowChangeEvent(((PermanentAddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePermanentAddressRow(PermanentAddressRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StudentPaymentSystemsDataSet ds = new StudentPaymentSystemsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PermanentAddressDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ImagesForAllDataTable : global::System.Data.TypedTableBase<ImagesForAllRow> {
            
            private global::System.Data.DataColumn columnImageId;
            
            private global::System.Data.DataColumn columnImagePath;
            
            private global::System.Data.DataColumn columnStudentID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ImagesForAllDataTable() {
                this.TableName = "ImagesForAll";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ImagesForAllDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ImagesForAllDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImageIdColumn {
                get {
                    return this.columnImageId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImagePathColumn {
                get {
                    return this.columnImagePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ImagesForAllRow this[int index] {
                get {
                    return ((ImagesForAllRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ImagesForAllRowChangeEventHandler ImagesForAllRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ImagesForAllRowChangeEventHandler ImagesForAllRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ImagesForAllRowChangeEventHandler ImagesForAllRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ImagesForAllRowChangeEventHandler ImagesForAllRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddImagesForAllRow(ImagesForAllRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ImagesForAllRow AddImagesForAllRow(string ImagePath, StudentInformationRow parentStudentInformationRowByFK_ImagesForAll_StudentInformation) {
                ImagesForAllRow rowImagesForAllRow = ((ImagesForAllRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ImagePath,
                        null};
                if ((parentStudentInformationRowByFK_ImagesForAll_StudentInformation != null)) {
                    columnValuesArray[2] = parentStudentInformationRowByFK_ImagesForAll_StudentInformation[0];
                }
                rowImagesForAllRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowImagesForAllRow);
                return rowImagesForAllRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ImagesForAllRow FindByImageId(int ImageId) {
                return ((ImagesForAllRow)(this.Rows.Find(new object[] {
                            ImageId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ImagesForAllDataTable cln = ((ImagesForAllDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ImagesForAllDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnImageId = base.Columns["ImageId"];
                this.columnImagePath = base.Columns["ImagePath"];
                this.columnStudentID = base.Columns["StudentID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnImageId = new global::System.Data.DataColumn("ImageId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageId);
                this.columnImagePath = new global::System.Data.DataColumn("ImagePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImagePath);
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnImageId}, true));
                this.columnImageId.AutoIncrement = true;
                this.columnImageId.AutoIncrementSeed = -1;
                this.columnImageId.AutoIncrementStep = -1;
                this.columnImageId.AllowDBNull = false;
                this.columnImageId.ReadOnly = true;
                this.columnImageId.Unique = true;
                this.columnImagePath.AllowDBNull = false;
                this.columnImagePath.MaxLength = 2147483647;
                this.columnStudentID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ImagesForAllRow NewImagesForAllRow() {
                return ((ImagesForAllRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ImagesForAllRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ImagesForAllRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ImagesForAllRowChanged != null)) {
                    this.ImagesForAllRowChanged(this, new ImagesForAllRowChangeEvent(((ImagesForAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ImagesForAllRowChanging != null)) {
                    this.ImagesForAllRowChanging(this, new ImagesForAllRowChangeEvent(((ImagesForAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ImagesForAllRowDeleted != null)) {
                    this.ImagesForAllRowDeleted(this, new ImagesForAllRowChangeEvent(((ImagesForAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ImagesForAllRowDeleting != null)) {
                    this.ImagesForAllRowDeleting(this, new ImagesForAllRowChangeEvent(((ImagesForAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveImagesForAllRow(ImagesForAllRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StudentPaymentSystemsDataSet ds = new StudentPaymentSystemsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ImagesForAllDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GuirdianInformationDataTable : global::System.Data.TypedTableBase<GuirdianInformationRow> {
            
            private global::System.Data.DataColumn columnGuirdianID;
            
            private global::System.Data.DataColumn columnGuirdianName;
            
            private global::System.Data.DataColumn columnGuirdianGender;
            
            private global::System.Data.DataColumn columnGuirdianOccupation;
            
            private global::System.Data.DataColumn columnGuirdianRelation;
            
            private global::System.Data.DataColumn columnGuirdianEmail;
            
            private global::System.Data.DataColumn columnGuirdianMobile;
            
            private global::System.Data.DataColumn columnStudentID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GuirdianInformationDataTable() {
                this.TableName = "GuirdianInformation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal GuirdianInformationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected GuirdianInformationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuirdianIDColumn {
                get {
                    return this.columnGuirdianID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuirdianNameColumn {
                get {
                    return this.columnGuirdianName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuirdianGenderColumn {
                get {
                    return this.columnGuirdianGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuirdianOccupationColumn {
                get {
                    return this.columnGuirdianOccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuirdianRelationColumn {
                get {
                    return this.columnGuirdianRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuirdianEmailColumn {
                get {
                    return this.columnGuirdianEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuirdianMobileColumn {
                get {
                    return this.columnGuirdianMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GuirdianInformationRow this[int index] {
                get {
                    return ((GuirdianInformationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GuirdianInformationRowChangeEventHandler GuirdianInformationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GuirdianInformationRowChangeEventHandler GuirdianInformationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GuirdianInformationRowChangeEventHandler GuirdianInformationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GuirdianInformationRowChangeEventHandler GuirdianInformationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddGuirdianInformationRow(GuirdianInformationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GuirdianInformationRow AddGuirdianInformationRow(string GuirdianName, string GuirdianGender, string GuirdianOccupation, string GuirdianRelation, string GuirdianEmail, string GuirdianMobile, StudentInformationRow parentStudentInformationRowByFK_GuirdianInformation_StudentInformation) {
                GuirdianInformationRow rowGuirdianInformationRow = ((GuirdianInformationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        GuirdianName,
                        GuirdianGender,
                        GuirdianOccupation,
                        GuirdianRelation,
                        GuirdianEmail,
                        GuirdianMobile,
                        null};
                if ((parentStudentInformationRowByFK_GuirdianInformation_StudentInformation != null)) {
                    columnValuesArray[7] = parentStudentInformationRowByFK_GuirdianInformation_StudentInformation[0];
                }
                rowGuirdianInformationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGuirdianInformationRow);
                return rowGuirdianInformationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GuirdianInformationRow FindByGuirdianID(int GuirdianID) {
                return ((GuirdianInformationRow)(this.Rows.Find(new object[] {
                            GuirdianID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GuirdianInformationDataTable cln = ((GuirdianInformationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GuirdianInformationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnGuirdianID = base.Columns["GuirdianID"];
                this.columnGuirdianName = base.Columns["GuirdianName"];
                this.columnGuirdianGender = base.Columns["GuirdianGender"];
                this.columnGuirdianOccupation = base.Columns["GuirdianOccupation"];
                this.columnGuirdianRelation = base.Columns["GuirdianRelation"];
                this.columnGuirdianEmail = base.Columns["GuirdianEmail"];
                this.columnGuirdianMobile = base.Columns["GuirdianMobile"];
                this.columnStudentID = base.Columns["StudentID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnGuirdianID = new global::System.Data.DataColumn("GuirdianID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuirdianID);
                this.columnGuirdianName = new global::System.Data.DataColumn("GuirdianName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuirdianName);
                this.columnGuirdianGender = new global::System.Data.DataColumn("GuirdianGender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuirdianGender);
                this.columnGuirdianOccupation = new global::System.Data.DataColumn("GuirdianOccupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuirdianOccupation);
                this.columnGuirdianRelation = new global::System.Data.DataColumn("GuirdianRelation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuirdianRelation);
                this.columnGuirdianEmail = new global::System.Data.DataColumn("GuirdianEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuirdianEmail);
                this.columnGuirdianMobile = new global::System.Data.DataColumn("GuirdianMobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuirdianMobile);
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGuirdianID}, true));
                this.columnGuirdianID.AutoIncrement = true;
                this.columnGuirdianID.AutoIncrementSeed = -1;
                this.columnGuirdianID.AutoIncrementStep = -1;
                this.columnGuirdianID.AllowDBNull = false;
                this.columnGuirdianID.ReadOnly = true;
                this.columnGuirdianID.Unique = true;
                this.columnGuirdianName.AllowDBNull = false;
                this.columnGuirdianName.MaxLength = 100;
                this.columnGuirdianGender.AllowDBNull = false;
                this.columnGuirdianGender.MaxLength = 10;
                this.columnGuirdianOccupation.AllowDBNull = false;
                this.columnGuirdianOccupation.MaxLength = 50;
                this.columnGuirdianRelation.AllowDBNull = false;
                this.columnGuirdianRelation.MaxLength = 50;
                this.columnGuirdianEmail.AllowDBNull = false;
                this.columnGuirdianEmail.MaxLength = 100;
                this.columnGuirdianMobile.AllowDBNull = false;
                this.columnGuirdianMobile.MaxLength = 15;
                this.columnStudentID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GuirdianInformationRow NewGuirdianInformationRow() {
                return ((GuirdianInformationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GuirdianInformationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GuirdianInformationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GuirdianInformationRowChanged != null)) {
                    this.GuirdianInformationRowChanged(this, new GuirdianInformationRowChangeEvent(((GuirdianInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GuirdianInformationRowChanging != null)) {
                    this.GuirdianInformationRowChanging(this, new GuirdianInformationRowChangeEvent(((GuirdianInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GuirdianInformationRowDeleted != null)) {
                    this.GuirdianInformationRowDeleted(this, new GuirdianInformationRowChangeEvent(((GuirdianInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GuirdianInformationRowDeleting != null)) {
                    this.GuirdianInformationRowDeleting(this, new GuirdianInformationRowChangeEvent(((GuirdianInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveGuirdianInformationRow(GuirdianInformationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StudentPaymentSystemsDataSet ds = new StudentPaymentSystemsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GuirdianInformationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StudentShiftInfoDataTable : global::System.Data.TypedTableBase<StudentShiftInfoRow> {
            
            private global::System.Data.DataColumn columnShiftID;
            
            private global::System.Data.DataColumn columnShiftName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentShiftInfoDataTable() {
                this.TableName = "StudentShiftInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentShiftInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected StudentShiftInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShiftIDColumn {
                get {
                    return this.columnShiftID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShiftNameColumn {
                get {
                    return this.columnShiftName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentShiftInfoRow this[int index] {
                get {
                    return ((StudentShiftInfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentShiftInfoRowChangeEventHandler StudentShiftInfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentShiftInfoRowChangeEventHandler StudentShiftInfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentShiftInfoRowChangeEventHandler StudentShiftInfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentShiftInfoRowChangeEventHandler StudentShiftInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddStudentShiftInfoRow(StudentShiftInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentShiftInfoRow AddStudentShiftInfoRow(string ShiftName) {
                StudentShiftInfoRow rowStudentShiftInfoRow = ((StudentShiftInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ShiftName};
                rowStudentShiftInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStudentShiftInfoRow);
                return rowStudentShiftInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentShiftInfoRow FindByShiftID(int ShiftID) {
                return ((StudentShiftInfoRow)(this.Rows.Find(new object[] {
                            ShiftID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StudentShiftInfoDataTable cln = ((StudentShiftInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StudentShiftInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnShiftID = base.Columns["ShiftID"];
                this.columnShiftName = base.Columns["ShiftName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnShiftID = new global::System.Data.DataColumn("ShiftID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShiftID);
                this.columnShiftName = new global::System.Data.DataColumn("ShiftName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShiftName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnShiftID}, true));
                this.columnShiftID.AutoIncrement = true;
                this.columnShiftID.AutoIncrementSeed = -1;
                this.columnShiftID.AutoIncrementStep = -1;
                this.columnShiftID.AllowDBNull = false;
                this.columnShiftID.ReadOnly = true;
                this.columnShiftID.Unique = true;
                this.columnShiftName.AllowDBNull = false;
                this.columnShiftName.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentShiftInfoRow NewStudentShiftInfoRow() {
                return ((StudentShiftInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StudentShiftInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StudentShiftInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StudentShiftInfoRowChanged != null)) {
                    this.StudentShiftInfoRowChanged(this, new StudentShiftInfoRowChangeEvent(((StudentShiftInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StudentShiftInfoRowChanging != null)) {
                    this.StudentShiftInfoRowChanging(this, new StudentShiftInfoRowChangeEvent(((StudentShiftInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StudentShiftInfoRowDeleted != null)) {
                    this.StudentShiftInfoRowDeleted(this, new StudentShiftInfoRowChangeEvent(((StudentShiftInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StudentShiftInfoRowDeleting != null)) {
                    this.StudentShiftInfoRowDeleting(this, new StudentShiftInfoRowChangeEvent(((StudentShiftInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveStudentShiftInfoRow(StudentShiftInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StudentPaymentSystemsDataSet ds = new StudentPaymentSystemsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StudentShiftInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StudentMonthlyFeesDataDataTable : global::System.Data.TypedTableBase<StudentMonthlyFeesDataRow> {
            
            private global::System.Data.DataColumn columnMonthlyFeesDataID;
            
            private global::System.Data.DataColumn columnMonthlyPaymentFor;
            
            private global::System.Data.DataColumn columnStudentID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesDataDataTable() {
                this.TableName = "StudentMonthlyFeesData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentMonthlyFeesDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected StudentMonthlyFeesDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MonthlyFeesDataIDColumn {
                get {
                    return this.columnMonthlyFeesDataID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MonthlyPaymentForColumn {
                get {
                    return this.columnMonthlyPaymentFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesDataRow this[int index] {
                get {
                    return ((StudentMonthlyFeesDataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentMonthlyFeesDataRowChangeEventHandler StudentMonthlyFeesDataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentMonthlyFeesDataRowChangeEventHandler StudentMonthlyFeesDataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentMonthlyFeesDataRowChangeEventHandler StudentMonthlyFeesDataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentMonthlyFeesDataRowChangeEventHandler StudentMonthlyFeesDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddStudentMonthlyFeesDataRow(StudentMonthlyFeesDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesDataRow AddStudentMonthlyFeesDataRow(string MonthlyPaymentFor, StudentInformationRow parentStudentInformationRowByFK_StudentMonthlyFeesData_StudentInformation) {
                StudentMonthlyFeesDataRow rowStudentMonthlyFeesDataRow = ((StudentMonthlyFeesDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MonthlyPaymentFor,
                        null};
                if ((parentStudentInformationRowByFK_StudentMonthlyFeesData_StudentInformation != null)) {
                    columnValuesArray[2] = parentStudentInformationRowByFK_StudentMonthlyFeesData_StudentInformation[0];
                }
                rowStudentMonthlyFeesDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStudentMonthlyFeesDataRow);
                return rowStudentMonthlyFeesDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesDataRow FindByMonthlyFeesDataID(int MonthlyFeesDataID) {
                return ((StudentMonthlyFeesDataRow)(this.Rows.Find(new object[] {
                            MonthlyFeesDataID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StudentMonthlyFeesDataDataTable cln = ((StudentMonthlyFeesDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StudentMonthlyFeesDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnMonthlyFeesDataID = base.Columns["MonthlyFeesDataID"];
                this.columnMonthlyPaymentFor = base.Columns["MonthlyPaymentFor"];
                this.columnStudentID = base.Columns["StudentID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnMonthlyFeesDataID = new global::System.Data.DataColumn("MonthlyFeesDataID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthlyFeesDataID);
                this.columnMonthlyPaymentFor = new global::System.Data.DataColumn("MonthlyPaymentFor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthlyPaymentFor);
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMonthlyFeesDataID}, true));
                this.columnMonthlyFeesDataID.AutoIncrement = true;
                this.columnMonthlyFeesDataID.AutoIncrementSeed = -1;
                this.columnMonthlyFeesDataID.AutoIncrementStep = -1;
                this.columnMonthlyFeesDataID.AllowDBNull = false;
                this.columnMonthlyFeesDataID.ReadOnly = true;
                this.columnMonthlyFeesDataID.Unique = true;
                this.columnMonthlyPaymentFor.AllowDBNull = false;
                this.columnMonthlyPaymentFor.MaxLength = 2147483647;
                this.columnStudentID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesDataRow NewStudentMonthlyFeesDataRow() {
                return ((StudentMonthlyFeesDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StudentMonthlyFeesDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StudentMonthlyFeesDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StudentMonthlyFeesDataRowChanged != null)) {
                    this.StudentMonthlyFeesDataRowChanged(this, new StudentMonthlyFeesDataRowChangeEvent(((StudentMonthlyFeesDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StudentMonthlyFeesDataRowChanging != null)) {
                    this.StudentMonthlyFeesDataRowChanging(this, new StudentMonthlyFeesDataRowChangeEvent(((StudentMonthlyFeesDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StudentMonthlyFeesDataRowDeleted != null)) {
                    this.StudentMonthlyFeesDataRowDeleted(this, new StudentMonthlyFeesDataRowChangeEvent(((StudentMonthlyFeesDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StudentMonthlyFeesDataRowDeleting != null)) {
                    this.StudentMonthlyFeesDataRowDeleting(this, new StudentMonthlyFeesDataRowChangeEvent(((StudentMonthlyFeesDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveStudentMonthlyFeesDataRow(StudentMonthlyFeesDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StudentPaymentSystemsDataSet ds = new StudentPaymentSystemsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StudentMonthlyFeesDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StudentMonthlyFeesAmountDataTable : global::System.Data.TypedTableBase<StudentMonthlyFeesAmountRow> {
            
            private global::System.Data.DataColumn columnMonthlyFeesAmountID;
            
            private global::System.Data.DataColumn columnMonthlyFeeAmountFor;
            
            private global::System.Data.DataColumn columnStudentID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesAmountDataTable() {
                this.TableName = "StudentMonthlyFeesAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentMonthlyFeesAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected StudentMonthlyFeesAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MonthlyFeesAmountIDColumn {
                get {
                    return this.columnMonthlyFeesAmountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MonthlyFeeAmountForColumn {
                get {
                    return this.columnMonthlyFeeAmountFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesAmountRow this[int index] {
                get {
                    return ((StudentMonthlyFeesAmountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentMonthlyFeesAmountRowChangeEventHandler StudentMonthlyFeesAmountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentMonthlyFeesAmountRowChangeEventHandler StudentMonthlyFeesAmountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentMonthlyFeesAmountRowChangeEventHandler StudentMonthlyFeesAmountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentMonthlyFeesAmountRowChangeEventHandler StudentMonthlyFeesAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddStudentMonthlyFeesAmountRow(StudentMonthlyFeesAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesAmountRow AddStudentMonthlyFeesAmountRow(decimal MonthlyFeeAmountFor, StudentInformationRow parentStudentInformationRowByFK_StudentMonthlyFeesAmount_StudentInformation) {
                StudentMonthlyFeesAmountRow rowStudentMonthlyFeesAmountRow = ((StudentMonthlyFeesAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MonthlyFeeAmountFor,
                        null};
                if ((parentStudentInformationRowByFK_StudentMonthlyFeesAmount_StudentInformation != null)) {
                    columnValuesArray[2] = parentStudentInformationRowByFK_StudentMonthlyFeesAmount_StudentInformation[0];
                }
                rowStudentMonthlyFeesAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStudentMonthlyFeesAmountRow);
                return rowStudentMonthlyFeesAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesAmountRow FindByMonthlyFeesAmountID(int MonthlyFeesAmountID) {
                return ((StudentMonthlyFeesAmountRow)(this.Rows.Find(new object[] {
                            MonthlyFeesAmountID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StudentMonthlyFeesAmountDataTable cln = ((StudentMonthlyFeesAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StudentMonthlyFeesAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnMonthlyFeesAmountID = base.Columns["MonthlyFeesAmountID"];
                this.columnMonthlyFeeAmountFor = base.Columns["MonthlyFeeAmountFor"];
                this.columnStudentID = base.Columns["StudentID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnMonthlyFeesAmountID = new global::System.Data.DataColumn("MonthlyFeesAmountID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthlyFeesAmountID);
                this.columnMonthlyFeeAmountFor = new global::System.Data.DataColumn("MonthlyFeeAmountFor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthlyFeeAmountFor);
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMonthlyFeesAmountID}, true));
                this.columnMonthlyFeesAmountID.AutoIncrement = true;
                this.columnMonthlyFeesAmountID.AutoIncrementSeed = -1;
                this.columnMonthlyFeesAmountID.AutoIncrementStep = -1;
                this.columnMonthlyFeesAmountID.AllowDBNull = false;
                this.columnMonthlyFeesAmountID.ReadOnly = true;
                this.columnMonthlyFeesAmountID.Unique = true;
                this.columnMonthlyFeeAmountFor.AllowDBNull = false;
                this.columnStudentID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesAmountRow NewStudentMonthlyFeesAmountRow() {
                return ((StudentMonthlyFeesAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StudentMonthlyFeesAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StudentMonthlyFeesAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StudentMonthlyFeesAmountRowChanged != null)) {
                    this.StudentMonthlyFeesAmountRowChanged(this, new StudentMonthlyFeesAmountRowChangeEvent(((StudentMonthlyFeesAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StudentMonthlyFeesAmountRowChanging != null)) {
                    this.StudentMonthlyFeesAmountRowChanging(this, new StudentMonthlyFeesAmountRowChangeEvent(((StudentMonthlyFeesAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StudentMonthlyFeesAmountRowDeleted != null)) {
                    this.StudentMonthlyFeesAmountRowDeleted(this, new StudentMonthlyFeesAmountRowChangeEvent(((StudentMonthlyFeesAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StudentMonthlyFeesAmountRowDeleting != null)) {
                    this.StudentMonthlyFeesAmountRowDeleting(this, new StudentMonthlyFeesAmountRowChangeEvent(((StudentMonthlyFeesAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveStudentMonthlyFeesAmountRow(StudentMonthlyFeesAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StudentPaymentSystemsDataSet ds = new StudentPaymentSystemsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StudentMonthlyFeesAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StudentMonthlyFeeDataTable : global::System.Data.TypedTableBase<StudentMonthlyFeeRow> {
            
            private global::System.Data.DataColumn columnPayID;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnAmountPayDate;
            
            private global::System.Data.DataColumn columnStudentID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeeDataTable() {
                this.TableName = "StudentMonthlyFee";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentMonthlyFeeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected StudentMonthlyFeeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PayIDColumn {
                get {
                    return this.columnPayID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AmountPayDateColumn {
                get {
                    return this.columnAmountPayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeeRow this[int index] {
                get {
                    return ((StudentMonthlyFeeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentMonthlyFeeRowChangeEventHandler StudentMonthlyFeeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentMonthlyFeeRowChangeEventHandler StudentMonthlyFeeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentMonthlyFeeRowChangeEventHandler StudentMonthlyFeeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentMonthlyFeeRowChangeEventHandler StudentMonthlyFeeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddStudentMonthlyFeeRow(StudentMonthlyFeeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeeRow AddStudentMonthlyFeeRow(decimal PaidAmount, decimal TotalAmount, System.DateTime AmountPayDate, StudentInformationRow parentStudentInformationRowByFK_StudentMonthlyFee_StudentInformation) {
                StudentMonthlyFeeRow rowStudentMonthlyFeeRow = ((StudentMonthlyFeeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PaidAmount,
                        TotalAmount,
                        AmountPayDate,
                        null};
                if ((parentStudentInformationRowByFK_StudentMonthlyFee_StudentInformation != null)) {
                    columnValuesArray[4] = parentStudentInformationRowByFK_StudentMonthlyFee_StudentInformation[0];
                }
                rowStudentMonthlyFeeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStudentMonthlyFeeRow);
                return rowStudentMonthlyFeeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeeRow FindByPayID(int PayID) {
                return ((StudentMonthlyFeeRow)(this.Rows.Find(new object[] {
                            PayID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StudentMonthlyFeeDataTable cln = ((StudentMonthlyFeeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StudentMonthlyFeeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPayID = base.Columns["PayID"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnAmountPayDate = base.Columns["AmountPayDate"];
                this.columnStudentID = base.Columns["StudentID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPayID = new global::System.Data.DataColumn("PayID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayID);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnAmountPayDate = new global::System.Data.DataColumn("AmountPayDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPayDate);
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPayID}, true));
                this.columnPayID.AutoIncrement = true;
                this.columnPayID.AutoIncrementSeed = -1;
                this.columnPayID.AutoIncrementStep = -1;
                this.columnPayID.AllowDBNull = false;
                this.columnPayID.ReadOnly = true;
                this.columnPayID.Unique = true;
                this.columnPaidAmount.AllowDBNull = false;
                this.columnTotalAmount.AllowDBNull = false;
                this.columnAmountPayDate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeeRow NewStudentMonthlyFeeRow() {
                return ((StudentMonthlyFeeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StudentMonthlyFeeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StudentMonthlyFeeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StudentMonthlyFeeRowChanged != null)) {
                    this.StudentMonthlyFeeRowChanged(this, new StudentMonthlyFeeRowChangeEvent(((StudentMonthlyFeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StudentMonthlyFeeRowChanging != null)) {
                    this.StudentMonthlyFeeRowChanging(this, new StudentMonthlyFeeRowChangeEvent(((StudentMonthlyFeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StudentMonthlyFeeRowDeleted != null)) {
                    this.StudentMonthlyFeeRowDeleted(this, new StudentMonthlyFeeRowChangeEvent(((StudentMonthlyFeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StudentMonthlyFeeRowDeleting != null)) {
                    this.StudentMonthlyFeeRowDeleting(this, new StudentMonthlyFeeRowChangeEvent(((StudentMonthlyFeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveStudentMonthlyFeeRow(StudentMonthlyFeeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StudentPaymentSystemsDataSet ds = new StudentPaymentSystemsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StudentMonthlyFeeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StudentInformationRow : global::System.Data.DataRow {
            
            private StudentInformationDataTable tableStudentInformation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentInformationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStudentInformation = ((StudentInformationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    return ((int)(this[this.tableStudentInformation.StudentIDColumn]));
                }
                set {
                    this[this.tableStudentInformation.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StudentName {
                get {
                    return ((string)(this[this.tableStudentInformation.StudentNameColumn]));
                }
                set {
                    this[this.tableStudentInformation.StudentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string _StudentFather_sName {
                get {
                    return ((string)(this[this.tableStudentInformation._StudentFather_sNameColumn]));
                }
                set {
                    this[this.tableStudentInformation._StudentFather_sNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string _StudentMother_sName {
                get {
                    return ((string)(this[this.tableStudentInformation._StudentMother_sNameColumn]));
                }
                set {
                    this[this.tableStudentInformation._StudentMother_sNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DateOfBirth {
                get {
                    return ((global::System.DateTime)(this[this.tableStudentInformation.DateOfBirthColumn]));
                }
                set {
                    this[this.tableStudentInformation.DateOfBirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StudentAge {
                get {
                    return ((string)(this[this.tableStudentInformation.StudentAgeColumn]));
                }
                set {
                    this[this.tableStudentInformation.StudentAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StudentStandar {
                get {
                    return ((string)(this[this.tableStudentInformation.StudentStandarColumn]));
                }
                set {
                    this[this.tableStudentInformation.StudentStandarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SudentRollNo {
                get {
                    return ((string)(this[this.tableStudentInformation.SudentRollNoColumn]));
                }
                set {
                    this[this.tableStudentInformation.SudentRollNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StudentBirthReg {
                get {
                    return ((string)(this[this.tableStudentInformation.StudentBirthRegColumn]));
                }
                set {
                    this[this.tableStudentInformation.StudentBirthRegColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StudentEmail {
                get {
                    return ((string)(this[this.tableStudentInformation.StudentEmailColumn]));
                }
                set {
                    this[this.tableStudentInformation.StudentEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SudentSession {
                get {
                    return ((string)(this[this.tableStudentInformation.SudentSessionColumn]));
                }
                set {
                    this[this.tableStudentInformation.SudentSessionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StudentGender {
                get {
                    return ((string)(this[this.tableStudentInformation.StudentGenderColumn]));
                }
                set {
                    this[this.tableStudentInformation.StudentGenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StudentMobile {
                get {
                    try {
                        return ((string)(this[this.tableStudentInformation.StudentMobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentMobile\' in table \'StudentInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStudentInformation.StudentMobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StudentNationality {
                get {
                    return ((string)(this[this.tableStudentInformation.StudentNationalityColumn]));
                }
                set {
                    this[this.tableStudentInformation.StudentNationalityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ShiftID {
                get {
                    return ((int)(this[this.tableStudentInformation.ShiftIDColumn]));
                }
                set {
                    this[this.tableStudentInformation.ShiftIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime StudentAdmissionDate {
                get {
                    return ((global::System.DateTime)(this[this.tableStudentInformation.StudentAdmissionDateColumn]));
                }
                set {
                    this[this.tableStudentInformation.StudentAdmissionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StudentDurations {
                get {
                    return ((string)(this[this.tableStudentInformation.StudentDurationsColumn]));
                }
                set {
                    this[this.tableStudentInformation.StudentDurationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentShiftInfoRow StudentShiftInfoRow {
                get {
                    return ((StudentShiftInfoRow)(this.GetParentRow(this.Table.ParentRelations["FK_StudentInformation_StudentShiftInfo"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_StudentInformation_StudentShiftInfo"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStudentMobileNull() {
                return this.IsNull(this.tableStudentInformation.StudentMobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStudentMobileNull() {
                this[this.tableStudentInformation.StudentMobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PresentAddressRow[] GetPresentAddressRows() {
                if ((this.Table.ChildRelations["FK_PresentAddress_StudentInformation"] == null)) {
                    return new PresentAddressRow[0];
                }
                else {
                    return ((PresentAddressRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PresentAddress_StudentInformation"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PermanentAddressRow[] GetPermanentAddressRows() {
                if ((this.Table.ChildRelations["FK_PermanentAddress_StudentInformation"] == null)) {
                    return new PermanentAddressRow[0];
                }
                else {
                    return ((PermanentAddressRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PermanentAddress_StudentInformation"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ImagesForAllRow[] GetImagesForAllRows() {
                if ((this.Table.ChildRelations["FK_ImagesForAll_StudentInformation"] == null)) {
                    return new ImagesForAllRow[0];
                }
                else {
                    return ((ImagesForAllRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ImagesForAll_StudentInformation"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GuirdianInformationRow[] GetGuirdianInformationRows() {
                if ((this.Table.ChildRelations["FK_GuirdianInformation_StudentInformation"] == null)) {
                    return new GuirdianInformationRow[0];
                }
                else {
                    return ((GuirdianInformationRow[])(base.GetChildRows(this.Table.ChildRelations["FK_GuirdianInformation_StudentInformation"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesDataRow[] GetStudentMonthlyFeesDataRows() {
                if ((this.Table.ChildRelations["FK_StudentMonthlyFeesData_StudentInformation"] == null)) {
                    return new StudentMonthlyFeesDataRow[0];
                }
                else {
                    return ((StudentMonthlyFeesDataRow[])(base.GetChildRows(this.Table.ChildRelations["FK_StudentMonthlyFeesData_StudentInformation"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesAmountRow[] GetStudentMonthlyFeesAmountRows() {
                if ((this.Table.ChildRelations["FK_StudentMonthlyFeesAmount_StudentInformation"] == null)) {
                    return new StudentMonthlyFeesAmountRow[0];
                }
                else {
                    return ((StudentMonthlyFeesAmountRow[])(base.GetChildRows(this.Table.ChildRelations["FK_StudentMonthlyFeesAmount_StudentInformation"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeeRow[] GetStudentMonthlyFeeRows() {
                if ((this.Table.ChildRelations["FK_StudentMonthlyFee_StudentInformation"] == null)) {
                    return new StudentMonthlyFeeRow[0];
                }
                else {
                    return ((StudentMonthlyFeeRow[])(base.GetChildRows(this.Table.ChildRelations["FK_StudentMonthlyFee_StudentInformation"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PresentAddressRow : global::System.Data.DataRow {
            
            private PresentAddressDataTable tablePresentAddress;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PresentAddressRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePresentAddress = ((PresentAddressDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PresentAddressID {
                get {
                    return ((int)(this[this.tablePresentAddress.PresentAddressIDColumn]));
                }
                set {
                    this[this.tablePresentAddress.PresentAddressIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PresentVllage {
                get {
                    return ((string)(this[this.tablePresentAddress.PresentVllageColumn]));
                }
                set {
                    this[this.tablePresentAddress.PresentVllageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PresentRoad {
                get {
                    return ((string)(this[this.tablePresentAddress.PresentRoadColumn]));
                }
                set {
                    this[this.tablePresentAddress.PresentRoadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PresentDistrict {
                get {
                    return ((string)(this[this.tablePresentAddress.PresentDistrictColumn]));
                }
                set {
                    this[this.tablePresentAddress.PresentDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PresentUpazila {
                get {
                    return ((string)(this[this.tablePresentAddress.PresentUpazilaColumn]));
                }
                set {
                    this[this.tablePresentAddress.PresentUpazilaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PresentPostOffice {
                get {
                    return ((string)(this[this.tablePresentAddress.PresentPostOfficeColumn]));
                }
                set {
                    this[this.tablePresentAddress.PresentPostOfficeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PresentPostCode {
                get {
                    return ((string)(this[this.tablePresentAddress.PresentPostCodeColumn]));
                }
                set {
                    this[this.tablePresentAddress.PresentPostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    return ((int)(this[this.tablePresentAddress.StudentIDColumn]));
                }
                set {
                    this[this.tablePresentAddress.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow StudentInformationRow {
                get {
                    return ((StudentInformationRow)(this.GetParentRow(this.Table.ParentRelations["FK_PresentAddress_StudentInformation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PresentAddress_StudentInformation"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PermanentAddressRow : global::System.Data.DataRow {
            
            private PermanentAddressDataTable tablePermanentAddress;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PermanentAddressRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePermanentAddress = ((PermanentAddressDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PermanentAddressID {
                get {
                    return ((int)(this[this.tablePermanentAddress.PermanentAddressIDColumn]));
                }
                set {
                    this[this.tablePermanentAddress.PermanentAddressIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PermanentVillage {
                get {
                    return ((string)(this[this.tablePermanentAddress.PermanentVillageColumn]));
                }
                set {
                    this[this.tablePermanentAddress.PermanentVillageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PermanentRoad {
                get {
                    return ((string)(this[this.tablePermanentAddress.PermanentRoadColumn]));
                }
                set {
                    this[this.tablePermanentAddress.PermanentRoadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PermanentDistrict {
                get {
                    return ((string)(this[this.tablePermanentAddress.PermanentDistrictColumn]));
                }
                set {
                    this[this.tablePermanentAddress.PermanentDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PermanentUpazila {
                get {
                    return ((string)(this[this.tablePermanentAddress.PermanentUpazilaColumn]));
                }
                set {
                    this[this.tablePermanentAddress.PermanentUpazilaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PermanentPostOffice {
                get {
                    return ((string)(this[this.tablePermanentAddress.PermanentPostOfficeColumn]));
                }
                set {
                    this[this.tablePermanentAddress.PermanentPostOfficeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PermanentPostCode {
                get {
                    return ((string)(this[this.tablePermanentAddress.PermanentPostCodeColumn]));
                }
                set {
                    this[this.tablePermanentAddress.PermanentPostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    return ((int)(this[this.tablePermanentAddress.StudentIDColumn]));
                }
                set {
                    this[this.tablePermanentAddress.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow StudentInformationRow {
                get {
                    return ((StudentInformationRow)(this.GetParentRow(this.Table.ParentRelations["FK_PermanentAddress_StudentInformation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PermanentAddress_StudentInformation"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ImagesForAllRow : global::System.Data.DataRow {
            
            private ImagesForAllDataTable tableImagesForAll;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ImagesForAllRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableImagesForAll = ((ImagesForAllDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ImageId {
                get {
                    return ((int)(this[this.tableImagesForAll.ImageIdColumn]));
                }
                set {
                    this[this.tableImagesForAll.ImageIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ImagePath {
                get {
                    return ((string)(this[this.tableImagesForAll.ImagePathColumn]));
                }
                set {
                    this[this.tableImagesForAll.ImagePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    return ((int)(this[this.tableImagesForAll.StudentIDColumn]));
                }
                set {
                    this[this.tableImagesForAll.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow StudentInformationRow {
                get {
                    return ((StudentInformationRow)(this.GetParentRow(this.Table.ParentRelations["FK_ImagesForAll_StudentInformation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ImagesForAll_StudentInformation"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GuirdianInformationRow : global::System.Data.DataRow {
            
            private GuirdianInformationDataTable tableGuirdianInformation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal GuirdianInformationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGuirdianInformation = ((GuirdianInformationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int GuirdianID {
                get {
                    return ((int)(this[this.tableGuirdianInformation.GuirdianIDColumn]));
                }
                set {
                    this[this.tableGuirdianInformation.GuirdianIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GuirdianName {
                get {
                    return ((string)(this[this.tableGuirdianInformation.GuirdianNameColumn]));
                }
                set {
                    this[this.tableGuirdianInformation.GuirdianNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GuirdianGender {
                get {
                    return ((string)(this[this.tableGuirdianInformation.GuirdianGenderColumn]));
                }
                set {
                    this[this.tableGuirdianInformation.GuirdianGenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GuirdianOccupation {
                get {
                    return ((string)(this[this.tableGuirdianInformation.GuirdianOccupationColumn]));
                }
                set {
                    this[this.tableGuirdianInformation.GuirdianOccupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GuirdianRelation {
                get {
                    return ((string)(this[this.tableGuirdianInformation.GuirdianRelationColumn]));
                }
                set {
                    this[this.tableGuirdianInformation.GuirdianRelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GuirdianEmail {
                get {
                    return ((string)(this[this.tableGuirdianInformation.GuirdianEmailColumn]));
                }
                set {
                    this[this.tableGuirdianInformation.GuirdianEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GuirdianMobile {
                get {
                    return ((string)(this[this.tableGuirdianInformation.GuirdianMobileColumn]));
                }
                set {
                    this[this.tableGuirdianInformation.GuirdianMobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    return ((int)(this[this.tableGuirdianInformation.StudentIDColumn]));
                }
                set {
                    this[this.tableGuirdianInformation.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow StudentInformationRow {
                get {
                    return ((StudentInformationRow)(this.GetParentRow(this.Table.ParentRelations["FK_GuirdianInformation_StudentInformation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_GuirdianInformation_StudentInformation"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StudentShiftInfoRow : global::System.Data.DataRow {
            
            private StudentShiftInfoDataTable tableStudentShiftInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentShiftInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStudentShiftInfo = ((StudentShiftInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ShiftID {
                get {
                    return ((int)(this[this.tableStudentShiftInfo.ShiftIDColumn]));
                }
                set {
                    this[this.tableStudentShiftInfo.ShiftIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ShiftName {
                get {
                    return ((string)(this[this.tableStudentShiftInfo.ShiftNameColumn]));
                }
                set {
                    this[this.tableStudentShiftInfo.ShiftNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow[] GetStudentInformationRows() {
                if ((this.Table.ChildRelations["FK_StudentInformation_StudentShiftInfo"] == null)) {
                    return new StudentInformationRow[0];
                }
                else {
                    return ((StudentInformationRow[])(base.GetChildRows(this.Table.ChildRelations["FK_StudentInformation_StudentShiftInfo"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StudentMonthlyFeesDataRow : global::System.Data.DataRow {
            
            private StudentMonthlyFeesDataDataTable tableStudentMonthlyFeesData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentMonthlyFeesDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStudentMonthlyFeesData = ((StudentMonthlyFeesDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int MonthlyFeesDataID {
                get {
                    return ((int)(this[this.tableStudentMonthlyFeesData.MonthlyFeesDataIDColumn]));
                }
                set {
                    this[this.tableStudentMonthlyFeesData.MonthlyFeesDataIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MonthlyPaymentFor {
                get {
                    return ((string)(this[this.tableStudentMonthlyFeesData.MonthlyPaymentForColumn]));
                }
                set {
                    this[this.tableStudentMonthlyFeesData.MonthlyPaymentForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    return ((int)(this[this.tableStudentMonthlyFeesData.StudentIDColumn]));
                }
                set {
                    this[this.tableStudentMonthlyFeesData.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow StudentInformationRow {
                get {
                    return ((StudentInformationRow)(this.GetParentRow(this.Table.ParentRelations["FK_StudentMonthlyFeesData_StudentInformation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_StudentMonthlyFeesData_StudentInformation"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StudentMonthlyFeesAmountRow : global::System.Data.DataRow {
            
            private StudentMonthlyFeesAmountDataTable tableStudentMonthlyFeesAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentMonthlyFeesAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStudentMonthlyFeesAmount = ((StudentMonthlyFeesAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int MonthlyFeesAmountID {
                get {
                    return ((int)(this[this.tableStudentMonthlyFeesAmount.MonthlyFeesAmountIDColumn]));
                }
                set {
                    this[this.tableStudentMonthlyFeesAmount.MonthlyFeesAmountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MonthlyFeeAmountFor {
                get {
                    return ((decimal)(this[this.tableStudentMonthlyFeesAmount.MonthlyFeeAmountForColumn]));
                }
                set {
                    this[this.tableStudentMonthlyFeesAmount.MonthlyFeeAmountForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    return ((int)(this[this.tableStudentMonthlyFeesAmount.StudentIDColumn]));
                }
                set {
                    this[this.tableStudentMonthlyFeesAmount.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow StudentInformationRow {
                get {
                    return ((StudentInformationRow)(this.GetParentRow(this.Table.ParentRelations["FK_StudentMonthlyFeesAmount_StudentInformation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_StudentMonthlyFeesAmount_StudentInformation"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StudentMonthlyFeeRow : global::System.Data.DataRow {
            
            private StudentMonthlyFeeDataTable tableStudentMonthlyFee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentMonthlyFeeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStudentMonthlyFee = ((StudentMonthlyFeeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PayID {
                get {
                    return ((int)(this[this.tableStudentMonthlyFee.PayIDColumn]));
                }
                set {
                    this[this.tableStudentMonthlyFee.PayIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PaidAmount {
                get {
                    return ((decimal)(this[this.tableStudentMonthlyFee.PaidAmountColumn]));
                }
                set {
                    this[this.tableStudentMonthlyFee.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalAmount {
                get {
                    return ((decimal)(this[this.tableStudentMonthlyFee.TotalAmountColumn]));
                }
                set {
                    this[this.tableStudentMonthlyFee.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime AmountPayDate {
                get {
                    return ((global::System.DateTime)(this[this.tableStudentMonthlyFee.AmountPayDateColumn]));
                }
                set {
                    this[this.tableStudentMonthlyFee.AmountPayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    try {
                        return ((int)(this[this.tableStudentMonthlyFee.StudentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentID\' in table \'StudentMonthlyFee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStudentMonthlyFee.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow StudentInformationRow {
                get {
                    return ((StudentInformationRow)(this.GetParentRow(this.Table.ParentRelations["FK_StudentMonthlyFee_StudentInformation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_StudentMonthlyFee_StudentInformation"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStudentIDNull() {
                return this.IsNull(this.tableStudentMonthlyFee.StudentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStudentIDNull() {
                this[this.tableStudentMonthlyFee.StudentIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class StudentInformationRowChangeEvent : global::System.EventArgs {
            
            private StudentInformationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRowChangeEvent(StudentInformationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentInformationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PresentAddressRowChangeEvent : global::System.EventArgs {
            
            private PresentAddressRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PresentAddressRowChangeEvent(PresentAddressRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PresentAddressRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PermanentAddressRowChangeEvent : global::System.EventArgs {
            
            private PermanentAddressRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PermanentAddressRowChangeEvent(PermanentAddressRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PermanentAddressRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ImagesForAllRowChangeEvent : global::System.EventArgs {
            
            private ImagesForAllRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ImagesForAllRowChangeEvent(ImagesForAllRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ImagesForAllRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class GuirdianInformationRowChangeEvent : global::System.EventArgs {
            
            private GuirdianInformationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GuirdianInformationRowChangeEvent(GuirdianInformationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GuirdianInformationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class StudentShiftInfoRowChangeEvent : global::System.EventArgs {
            
            private StudentShiftInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentShiftInfoRowChangeEvent(StudentShiftInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentShiftInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class StudentMonthlyFeesDataRowChangeEvent : global::System.EventArgs {
            
            private StudentMonthlyFeesDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesDataRowChangeEvent(StudentMonthlyFeesDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class StudentMonthlyFeesAmountRowChangeEvent : global::System.EventArgs {
            
            private StudentMonthlyFeesAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesAmountRowChangeEvent(StudentMonthlyFeesAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeesAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class StudentMonthlyFeeRowChangeEvent : global::System.EventArgs {
            
            private StudentMonthlyFeeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeeRowChangeEvent(StudentMonthlyFeeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentMonthlyFeeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Schools_Management_System.Report_For_Payment.StudentPaymentSystemsDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StudentInformationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public StudentInformationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StudentInformation";
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("StudentName", "StudentName");
            tableMapping.ColumnMappings.Add("StudentFather\'sName", "StudentFather\'sName");
            tableMapping.ColumnMappings.Add("StudentMother\'sName", "StudentMother\'sName");
            tableMapping.ColumnMappings.Add("DateOfBirth", "DateOfBirth");
            tableMapping.ColumnMappings.Add("StudentAge", "StudentAge");
            tableMapping.ColumnMappings.Add("StudentStandar", "StudentStandar");
            tableMapping.ColumnMappings.Add("SudentRollNo", "SudentRollNo");
            tableMapping.ColumnMappings.Add("StudentBirthReg", "StudentBirthReg");
            tableMapping.ColumnMappings.Add("StudentEmail", "StudentEmail");
            tableMapping.ColumnMappings.Add("SudentSession", "SudentSession");
            tableMapping.ColumnMappings.Add("StudentGender", "StudentGender");
            tableMapping.ColumnMappings.Add("StudentMobile", "StudentMobile");
            tableMapping.ColumnMappings.Add("StudentNationality", "StudentNationality");
            tableMapping.ColumnMappings.Add("ShiftID", "ShiftID");
            tableMapping.ColumnMappings.Add("StudentAdmissionDate", "StudentAdmissionDate");
            tableMapping.ColumnMappings.Add("StudentDurations", "StudentDurations");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[StudentInformation] WHERE (([StudentID] = @Original_StudentID) AND ([StudentName] = @Original_StudentName) AND ([StudentFather'sName] = @p2) AND ([StudentMother'sName] = @p4) AND ([DateOfBirth] = @Original_DateOfBirth) AND ([StudentAge] = @Original_StudentAge) AND ([StudentStandar] = @Original_StudentStandar) AND ([SudentRollNo] = @Original_SudentRollNo) AND ([StudentBirthReg] = @Original_StudentBirthReg) AND ([StudentEmail] = @Original_StudentEmail) AND ([SudentSession] = @Original_SudentSession) AND ([StudentGender] = @Original_StudentGender) AND ((@IsNull_StudentMobile = 1 AND [StudentMobile] IS NULL) OR ([StudentMobile] = @Original_StudentMobile)) AND ([StudentNationality] = @Original_StudentNationality) AND ([ShiftID] = @Original_ShiftID) AND ([StudentAdmissionDate] = @Original_StudentAdmissionDate) AND ([StudentDurations] = @Original_StudentDurations))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentFather\'sName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentMother\'sName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateOfBirth", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentAge", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentAge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentStandar", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentStandar", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SudentRollNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SudentRollNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentBirthReg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentBirthReg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SudentSession", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SudentSession", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentGender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentGender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StudentMobile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentMobile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentMobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentMobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentNationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentNationality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShiftID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentAdmissionDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentAdmissionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentDurations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentDurations", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[StudentInformation] ([StudentName], [StudentFather'sName], [StudentMother'sName], [DateOfBirth], [StudentAge], [StudentStandar], [SudentRollNo], [StudentBirthReg], [StudentEmail], [SudentSession], [StudentGender], [StudentMobile], [StudentNationality], [ShiftID], [StudentAdmissionDate], [StudentDurations]) VALUES (@StudentName, @p1, @p3, @DateOfBirth, @StudentAge, @StudentStandar, @SudentRollNo, @StudentBirthReg, @StudentEmail, @SudentSession, @StudentGender, @StudentMobile, @StudentNationality, @ShiftID, @StudentAdmissionDate, @StudentDurations);
SELECT StudentID, StudentName, [StudentFather'sName], [StudentMother'sName], DateOfBirth, StudentAge, StudentStandar, SudentRollNo, StudentBirthReg, StudentEmail, SudentSession, StudentGender, StudentMobile, StudentNationality, ShiftID, StudentAdmissionDate, StudentDurations FROM StudentInformation WHERE (StudentID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentFather\'sName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentMother\'sName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfBirth", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentAge", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentAge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentStandar", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentStandar", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SudentRollNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SudentRollNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentBirthReg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentBirthReg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SudentSession", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SudentSession", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentGender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentGender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentMobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentMobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentNationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentNationality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShiftID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentAdmissionDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentAdmissionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentDurations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentDurations", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[StudentInformation] SET [StudentName] = @StudentName, [StudentFathe" +
                "r\'sName] = @p1, [StudentMother\'sName] = @p3, [DateOfBirth] = @DateOfBirth, [Stud" +
                "entAge] = @StudentAge, [StudentStandar] = @StudentStandar, [SudentRollNo] = @Sud" +
                "entRollNo, [StudentBirthReg] = @StudentBirthReg, [StudentEmail] = @StudentEmail," +
                " [SudentSession] = @SudentSession, [StudentGender] = @StudentGender, [StudentMob" +
                "ile] = @StudentMobile, [StudentNationality] = @StudentNationality, [ShiftID] = @" +
                "ShiftID, [StudentAdmissionDate] = @StudentAdmissionDate, [StudentDurations] = @S" +
                "tudentDurations WHERE (([StudentID] = @Original_StudentID) AND ([StudentName] = " +
                "@Original_StudentName) AND ([StudentFather\'sName] = @p2) AND ([StudentMother\'sNa" +
                "me] = @p4) AND ([DateOfBirth] = @Original_DateOfBirth) AND ([StudentAge] = @Orig" +
                "inal_StudentAge) AND ([StudentStandar] = @Original_StudentStandar) AND ([SudentR" +
                "ollNo] = @Original_SudentRollNo) AND ([StudentBirthReg] = @Original_StudentBirth" +
                "Reg) AND ([StudentEmail] = @Original_StudentEmail) AND ([SudentSession] = @Origi" +
                "nal_SudentSession) AND ([StudentGender] = @Original_StudentGender) AND ((@IsNull" +
                "_StudentMobile = 1 AND [StudentMobile] IS NULL) OR ([StudentMobile] = @Original_" +
                "StudentMobile)) AND ([StudentNationality] = @Original_StudentNationality) AND ([" +
                "ShiftID] = @Original_ShiftID) AND ([StudentAdmissionDate] = @Original_StudentAdm" +
                "issionDate) AND ([StudentDurations] = @Original_StudentDurations));\r\nSELECT Stud" +
                "entID, StudentName, [StudentFather\'sName], [StudentMother\'sName], DateOfBirth, S" +
                "tudentAge, StudentStandar, SudentRollNo, StudentBirthReg, StudentEmail, SudentSe" +
                "ssion, StudentGender, StudentMobile, StudentNationality, ShiftID, StudentAdmissi" +
                "onDate, StudentDurations FROM StudentInformation WHERE (StudentID = @StudentID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentFather\'sName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentMother\'sName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfBirth", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentAge", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentAge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentStandar", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentStandar", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SudentRollNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SudentRollNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentBirthReg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentBirthReg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SudentSession", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SudentSession", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentGender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentGender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentMobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentMobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentNationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentNationality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShiftID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentAdmissionDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentAdmissionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentDurations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentDurations", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentFather\'sName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentMother\'sName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateOfBirth", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentAge", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentAge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentStandar", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentStandar", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SudentRollNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SudentRollNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentBirthReg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentBirthReg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SudentSession", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SudentSession", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentGender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentGender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StudentMobile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentMobile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentMobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentMobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentNationality", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentNationality", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShiftID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentAdmissionDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentAdmissionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentDurations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentDurations", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Schools_Management_System.Properties.Settings.Default.schoolmanagementsystemConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT StudentID, StudentName, [StudentFather'sName], [StudentMother'sName], DateOfBirth, StudentAge, StudentStandar, SudentRollNo, StudentBirthReg, StudentEmail, SudentSession, StudentGender, StudentMobile, StudentNationality, ShiftID, StudentAdmissionDate, StudentDurations FROM dbo.StudentInformation";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StudentPaymentSystemsDataSet.StudentInformationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StudentPaymentSystemsDataSet.StudentInformationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            StudentPaymentSystemsDataSet.StudentInformationDataTable dataTable = new StudentPaymentSystemsDataSet.StudentInformationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet.StudentInformationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "StudentInformation");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_StudentID, 
                    string Original_StudentName, 
                    string p2, 
                    string p4, 
                    System.DateTime Original_DateOfBirth, 
                    string Original_StudentAge, 
                    string Original_StudentStandar, 
                    string Original_SudentRollNo, 
                    string Original_StudentBirthReg, 
                    string Original_StudentEmail, 
                    string Original_SudentSession, 
                    string Original_StudentGender, 
                    string Original_StudentMobile, 
                    string Original_StudentNationality, 
                    int Original_ShiftID, 
                    System.DateTime Original_StudentAdmissionDate, 
                    string Original_StudentDurations) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_StudentID));
            if ((Original_StudentName == null)) {
                throw new global::System.ArgumentNullException("Original_StudentName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_StudentName));
            }
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(p2));
            }
            if ((p4 == null)) {
                throw new global::System.ArgumentNullException("p4");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(p4));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DateOfBirth));
            if ((Original_StudentAge == null)) {
                throw new global::System.ArgumentNullException("Original_StudentAge");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_StudentAge));
            }
            if ((Original_StudentStandar == null)) {
                throw new global::System.ArgumentNullException("Original_StudentStandar");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_StudentStandar));
            }
            if ((Original_SudentRollNo == null)) {
                throw new global::System.ArgumentNullException("Original_SudentRollNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_SudentRollNo));
            }
            if ((Original_StudentBirthReg == null)) {
                throw new global::System.ArgumentNullException("Original_StudentBirthReg");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_StudentBirthReg));
            }
            if ((Original_StudentEmail == null)) {
                throw new global::System.ArgumentNullException("Original_StudentEmail");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_StudentEmail));
            }
            if ((Original_SudentSession == null)) {
                throw new global::System.ArgumentNullException("Original_SudentSession");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_SudentSession));
            }
            if ((Original_StudentGender == null)) {
                throw new global::System.ArgumentNullException("Original_StudentGender");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_StudentGender));
            }
            if ((Original_StudentMobile == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_StudentMobile));
            }
            if ((Original_StudentNationality == null)) {
                throw new global::System.ArgumentNullException("Original_StudentNationality");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_StudentNationality));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_ShiftID));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_StudentAdmissionDate));
            if ((Original_StudentDurations == null)) {
                throw new global::System.ArgumentNullException("Original_StudentDurations");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_StudentDurations));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string StudentName, 
                    string p1, 
                    string p3, 
                    System.DateTime DateOfBirth, 
                    string StudentAge, 
                    string StudentStandar, 
                    string SudentRollNo, 
                    string StudentBirthReg, 
                    string StudentEmail, 
                    string SudentSession, 
                    string StudentGender, 
                    string StudentMobile, 
                    string StudentNationality, 
                    int ShiftID, 
                    System.DateTime StudentAdmissionDate, 
                    string StudentDurations) {
            if ((StudentName == null)) {
                throw new global::System.ArgumentNullException("StudentName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(StudentName));
            }
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p1));
            }
            if ((p3 == null)) {
                throw new global::System.ArgumentNullException("p3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(p3));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DateOfBirth));
            if ((StudentAge == null)) {
                throw new global::System.ArgumentNullException("StudentAge");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(StudentAge));
            }
            if ((StudentStandar == null)) {
                throw new global::System.ArgumentNullException("StudentStandar");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(StudentStandar));
            }
            if ((SudentRollNo == null)) {
                throw new global::System.ArgumentNullException("SudentRollNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SudentRollNo));
            }
            if ((StudentBirthReg == null)) {
                throw new global::System.ArgumentNullException("StudentBirthReg");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(StudentBirthReg));
            }
            if ((StudentEmail == null)) {
                throw new global::System.ArgumentNullException("StudentEmail");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(StudentEmail));
            }
            if ((SudentSession == null)) {
                throw new global::System.ArgumentNullException("SudentSession");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SudentSession));
            }
            if ((StudentGender == null)) {
                throw new global::System.ArgumentNullException("StudentGender");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(StudentGender));
            }
            if ((StudentMobile == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(StudentMobile));
            }
            if ((StudentNationality == null)) {
                throw new global::System.ArgumentNullException("StudentNationality");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(StudentNationality));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(ShiftID));
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(StudentAdmissionDate));
            if ((StudentDurations == null)) {
                throw new global::System.ArgumentNullException("StudentDurations");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(StudentDurations));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string StudentName, 
                    string p1, 
                    string p3, 
                    System.DateTime DateOfBirth, 
                    string StudentAge, 
                    string StudentStandar, 
                    string SudentRollNo, 
                    string StudentBirthReg, 
                    string StudentEmail, 
                    string SudentSession, 
                    string StudentGender, 
                    string StudentMobile, 
                    string StudentNationality, 
                    int ShiftID, 
                    System.DateTime StudentAdmissionDate, 
                    string StudentDurations, 
                    int Original_StudentID, 
                    string Original_StudentName, 
                    string p2, 
                    string p4, 
                    System.DateTime Original_DateOfBirth, 
                    string Original_StudentAge, 
                    string Original_StudentStandar, 
                    string Original_SudentRollNo, 
                    string Original_StudentBirthReg, 
                    string Original_StudentEmail, 
                    string Original_SudentSession, 
                    string Original_StudentGender, 
                    string Original_StudentMobile, 
                    string Original_StudentNationality, 
                    int Original_ShiftID, 
                    System.DateTime Original_StudentAdmissionDate, 
                    string Original_StudentDurations, 
                    int StudentID) {
            if ((StudentName == null)) {
                throw new global::System.ArgumentNullException("StudentName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(StudentName));
            }
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p1));
            }
            if ((p3 == null)) {
                throw new global::System.ArgumentNullException("p3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(p3));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DateOfBirth));
            if ((StudentAge == null)) {
                throw new global::System.ArgumentNullException("StudentAge");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(StudentAge));
            }
            if ((StudentStandar == null)) {
                throw new global::System.ArgumentNullException("StudentStandar");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(StudentStandar));
            }
            if ((SudentRollNo == null)) {
                throw new global::System.ArgumentNullException("SudentRollNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SudentRollNo));
            }
            if ((StudentBirthReg == null)) {
                throw new global::System.ArgumentNullException("StudentBirthReg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(StudentBirthReg));
            }
            if ((StudentEmail == null)) {
                throw new global::System.ArgumentNullException("StudentEmail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(StudentEmail));
            }
            if ((SudentSession == null)) {
                throw new global::System.ArgumentNullException("SudentSession");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SudentSession));
            }
            if ((StudentGender == null)) {
                throw new global::System.ArgumentNullException("StudentGender");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(StudentGender));
            }
            if ((StudentMobile == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(StudentMobile));
            }
            if ((StudentNationality == null)) {
                throw new global::System.ArgumentNullException("StudentNationality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(StudentNationality));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ShiftID));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(StudentAdmissionDate));
            if ((StudentDurations == null)) {
                throw new global::System.ArgumentNullException("StudentDurations");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(StudentDurations));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_StudentID));
            if ((Original_StudentName == null)) {
                throw new global::System.ArgumentNullException("Original_StudentName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_StudentName));
            }
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(p2));
            }
            if ((p4 == null)) {
                throw new global::System.ArgumentNullException("p4");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(p4));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_DateOfBirth));
            if ((Original_StudentAge == null)) {
                throw new global::System.ArgumentNullException("Original_StudentAge");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_StudentAge));
            }
            if ((Original_StudentStandar == null)) {
                throw new global::System.ArgumentNullException("Original_StudentStandar");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_StudentStandar));
            }
            if ((Original_SudentRollNo == null)) {
                throw new global::System.ArgumentNullException("Original_SudentRollNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_SudentRollNo));
            }
            if ((Original_StudentBirthReg == null)) {
                throw new global::System.ArgumentNullException("Original_StudentBirthReg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_StudentBirthReg));
            }
            if ((Original_StudentEmail == null)) {
                throw new global::System.ArgumentNullException("Original_StudentEmail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_StudentEmail));
            }
            if ((Original_SudentSession == null)) {
                throw new global::System.ArgumentNullException("Original_SudentSession");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_SudentSession));
            }
            if ((Original_StudentGender == null)) {
                throw new global::System.ArgumentNullException("Original_StudentGender");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_StudentGender));
            }
            if ((Original_StudentMobile == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_StudentMobile));
            }
            if ((Original_StudentNationality == null)) {
                throw new global::System.ArgumentNullException("Original_StudentNationality");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_StudentNationality));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_ShiftID));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_StudentAdmissionDate));
            if ((Original_StudentDurations == null)) {
                throw new global::System.ArgumentNullException("Original_StudentDurations");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_StudentDurations));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string StudentName, 
                    string p1, 
                    string p3, 
                    System.DateTime DateOfBirth, 
                    string StudentAge, 
                    string StudentStandar, 
                    string SudentRollNo, 
                    string StudentBirthReg, 
                    string StudentEmail, 
                    string SudentSession, 
                    string StudentGender, 
                    string StudentMobile, 
                    string StudentNationality, 
                    int ShiftID, 
                    System.DateTime StudentAdmissionDate, 
                    string StudentDurations, 
                    int Original_StudentID, 
                    string Original_StudentName, 
                    string p2, 
                    string p4, 
                    System.DateTime Original_DateOfBirth, 
                    string Original_StudentAge, 
                    string Original_StudentStandar, 
                    string Original_SudentRollNo, 
                    string Original_StudentBirthReg, 
                    string Original_StudentEmail, 
                    string Original_SudentSession, 
                    string Original_StudentGender, 
                    string Original_StudentMobile, 
                    string Original_StudentNationality, 
                    int Original_ShiftID, 
                    System.DateTime Original_StudentAdmissionDate, 
                    string Original_StudentDurations) {
            return this.Update(StudentName, p1, p3, DateOfBirth, StudentAge, StudentStandar, SudentRollNo, StudentBirthReg, StudentEmail, SudentSession, StudentGender, StudentMobile, StudentNationality, ShiftID, StudentAdmissionDate, StudentDurations, Original_StudentID, Original_StudentName, p2, p4, Original_DateOfBirth, Original_StudentAge, Original_StudentStandar, Original_SudentRollNo, Original_StudentBirthReg, Original_StudentEmail, Original_SudentSession, Original_StudentGender, Original_StudentMobile, Original_StudentNationality, Original_ShiftID, Original_StudentAdmissionDate, Original_StudentDurations, Original_StudentID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PresentAddressTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PresentAddressTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PresentAddress";
            tableMapping.ColumnMappings.Add("PresentAddressID", "PresentAddressID");
            tableMapping.ColumnMappings.Add("PresentVllage", "PresentVllage");
            tableMapping.ColumnMappings.Add("PresentRoad", "PresentRoad");
            tableMapping.ColumnMappings.Add("PresentDistrict", "PresentDistrict");
            tableMapping.ColumnMappings.Add("PresentUpazila", "PresentUpazila");
            tableMapping.ColumnMappings.Add("PresentPostOffice", "PresentPostOffice");
            tableMapping.ColumnMappings.Add("PresentPostCode", "PresentPostCode");
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PresentAddress] WHERE (([PresentAddressID] = @Original_PresentAddressID) AND ([PresentVllage] = @Original_PresentVllage) AND ([PresentRoad] = @Original_PresentRoad) AND ([PresentDistrict] = @Original_PresentDistrict) AND ([PresentUpazila] = @Original_PresentUpazila) AND ([PresentPostOffice] = @Original_PresentPostOffice) AND ([PresentPostCode] = @Original_PresentPostCode) AND ([StudentID] = @Original_StudentID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentAddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentAddressID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentVllage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentVllage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentRoad", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentRoad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentDistrict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentDistrict", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentUpazila", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentUpazila", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentPostOffice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentPostOffice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentPostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentPostCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PresentAddress] ([PresentVllage], [PresentRoad], [PresentDistrict], [PresentUpazila], [PresentPostOffice], [PresentPostCode], [StudentID]) VALUES (@PresentVllage, @PresentRoad, @PresentDistrict, @PresentUpazila, @PresentPostOffice, @PresentPostCode, @StudentID);
SELECT PresentAddressID, PresentVllage, PresentRoad, PresentDistrict, PresentUpazila, PresentPostOffice, PresentPostCode, StudentID FROM PresentAddress WHERE (PresentAddressID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentVllage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentVllage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentRoad", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentRoad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentDistrict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentDistrict", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentUpazila", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentUpazila", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentPostOffice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentPostOffice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentPostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentPostCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PresentAddress] SET [PresentVllage] = @PresentVllage, [PresentRoad] = @PresentRoad, [PresentDistrict] = @PresentDistrict, [PresentUpazila] = @PresentUpazila, [PresentPostOffice] = @PresentPostOffice, [PresentPostCode] = @PresentPostCode, [StudentID] = @StudentID WHERE (([PresentAddressID] = @Original_PresentAddressID) AND ([PresentVllage] = @Original_PresentVllage) AND ([PresentRoad] = @Original_PresentRoad) AND ([PresentDistrict] = @Original_PresentDistrict) AND ([PresentUpazila] = @Original_PresentUpazila) AND ([PresentPostOffice] = @Original_PresentPostOffice) AND ([PresentPostCode] = @Original_PresentPostCode) AND ([StudentID] = @Original_StudentID));
SELECT PresentAddressID, PresentVllage, PresentRoad, PresentDistrict, PresentUpazila, PresentPostOffice, PresentPostCode, StudentID FROM PresentAddress WHERE (PresentAddressID = @PresentAddressID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentVllage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentVllage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentRoad", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentRoad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentDistrict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentDistrict", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentUpazila", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentUpazila", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentPostOffice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentPostOffice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentPostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentPostCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentAddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentAddressID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentVllage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentVllage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentRoad", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentRoad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentDistrict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentDistrict", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentUpazila", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentUpazila", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentPostOffice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentPostOffice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentPostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentPostCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentAddressID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PresentAddressID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Schools_Management_System.Properties.Settings.Default.schoolmanagementsystemConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PresentAddressID, PresentVllage, PresentRoad, PresentDistrict, PresentUpaz" +
                "ila, PresentPostOffice, PresentPostCode, StudentID FROM dbo.PresentAddress";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StudentPaymentSystemsDataSet.PresentAddressDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StudentPaymentSystemsDataSet.PresentAddressDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            StudentPaymentSystemsDataSet.PresentAddressDataTable dataTable = new StudentPaymentSystemsDataSet.PresentAddressDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet.PresentAddressDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PresentAddress");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PresentAddressID, string Original_PresentVllage, string Original_PresentRoad, string Original_PresentDistrict, string Original_PresentUpazila, string Original_PresentPostOffice, string Original_PresentPostCode, int Original_StudentID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PresentAddressID));
            if ((Original_PresentVllage == null)) {
                throw new global::System.ArgumentNullException("Original_PresentVllage");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PresentVllage));
            }
            if ((Original_PresentRoad == null)) {
                throw new global::System.ArgumentNullException("Original_PresentRoad");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PresentRoad));
            }
            if ((Original_PresentDistrict == null)) {
                throw new global::System.ArgumentNullException("Original_PresentDistrict");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_PresentDistrict));
            }
            if ((Original_PresentUpazila == null)) {
                throw new global::System.ArgumentNullException("Original_PresentUpazila");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PresentUpazila));
            }
            if ((Original_PresentPostOffice == null)) {
                throw new global::System.ArgumentNullException("Original_PresentPostOffice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PresentPostOffice));
            }
            if ((Original_PresentPostCode == null)) {
                throw new global::System.ArgumentNullException("Original_PresentPostCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PresentPostCode));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PresentVllage, string PresentRoad, string PresentDistrict, string PresentUpazila, string PresentPostOffice, string PresentPostCode, int StudentID) {
            if ((PresentVllage == null)) {
                throw new global::System.ArgumentNullException("PresentVllage");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PresentVllage));
            }
            if ((PresentRoad == null)) {
                throw new global::System.ArgumentNullException("PresentRoad");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PresentRoad));
            }
            if ((PresentDistrict == null)) {
                throw new global::System.ArgumentNullException("PresentDistrict");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PresentDistrict));
            }
            if ((PresentUpazila == null)) {
                throw new global::System.ArgumentNullException("PresentUpazila");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PresentUpazila));
            }
            if ((PresentPostOffice == null)) {
                throw new global::System.ArgumentNullException("PresentPostOffice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PresentPostOffice));
            }
            if ((PresentPostCode == null)) {
                throw new global::System.ArgumentNullException("PresentPostCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PresentPostCode));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PresentVllage, 
                    string PresentRoad, 
                    string PresentDistrict, 
                    string PresentUpazila, 
                    string PresentPostOffice, 
                    string PresentPostCode, 
                    int StudentID, 
                    int Original_PresentAddressID, 
                    string Original_PresentVllage, 
                    string Original_PresentRoad, 
                    string Original_PresentDistrict, 
                    string Original_PresentUpazila, 
                    string Original_PresentPostOffice, 
                    string Original_PresentPostCode, 
                    int Original_StudentID, 
                    int PresentAddressID) {
            if ((PresentVllage == null)) {
                throw new global::System.ArgumentNullException("PresentVllage");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PresentVllage));
            }
            if ((PresentRoad == null)) {
                throw new global::System.ArgumentNullException("PresentRoad");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PresentRoad));
            }
            if ((PresentDistrict == null)) {
                throw new global::System.ArgumentNullException("PresentDistrict");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PresentDistrict));
            }
            if ((PresentUpazila == null)) {
                throw new global::System.ArgumentNullException("PresentUpazila");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PresentUpazila));
            }
            if ((PresentPostOffice == null)) {
                throw new global::System.ArgumentNullException("PresentPostOffice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PresentPostOffice));
            }
            if ((PresentPostCode == null)) {
                throw new global::System.ArgumentNullException("PresentPostCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PresentPostCode));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(StudentID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_PresentAddressID));
            if ((Original_PresentVllage == null)) {
                throw new global::System.ArgumentNullException("Original_PresentVllage");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_PresentVllage));
            }
            if ((Original_PresentRoad == null)) {
                throw new global::System.ArgumentNullException("Original_PresentRoad");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_PresentRoad));
            }
            if ((Original_PresentDistrict == null)) {
                throw new global::System.ArgumentNullException("Original_PresentDistrict");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_PresentDistrict));
            }
            if ((Original_PresentUpazila == null)) {
                throw new global::System.ArgumentNullException("Original_PresentUpazila");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_PresentUpazila));
            }
            if ((Original_PresentPostOffice == null)) {
                throw new global::System.ArgumentNullException("Original_PresentPostOffice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_PresentPostOffice));
            }
            if ((Original_PresentPostCode == null)) {
                throw new global::System.ArgumentNullException("Original_PresentPostCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_PresentPostCode));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_StudentID));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(PresentAddressID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PresentVllage, string PresentRoad, string PresentDistrict, string PresentUpazila, string PresentPostOffice, string PresentPostCode, int StudentID, int Original_PresentAddressID, string Original_PresentVllage, string Original_PresentRoad, string Original_PresentDistrict, string Original_PresentUpazila, string Original_PresentPostOffice, string Original_PresentPostCode, int Original_StudentID) {
            return this.Update(PresentVllage, PresentRoad, PresentDistrict, PresentUpazila, PresentPostOffice, PresentPostCode, StudentID, Original_PresentAddressID, Original_PresentVllage, Original_PresentRoad, Original_PresentDistrict, Original_PresentUpazila, Original_PresentPostOffice, Original_PresentPostCode, Original_StudentID, Original_PresentAddressID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PermanentAddressTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PermanentAddressTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PermanentAddress";
            tableMapping.ColumnMappings.Add("PermanentAddressID", "PermanentAddressID");
            tableMapping.ColumnMappings.Add("PermanentVillage", "PermanentVillage");
            tableMapping.ColumnMappings.Add("PermanentRoad", "PermanentRoad");
            tableMapping.ColumnMappings.Add("PermanentDistrict", "PermanentDistrict");
            tableMapping.ColumnMappings.Add("PermanentUpazila", "PermanentUpazila");
            tableMapping.ColumnMappings.Add("PermanentPostOffice", "PermanentPostOffice");
            tableMapping.ColumnMappings.Add("PermanentPostCode", "PermanentPostCode");
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PermanentAddress] WHERE (([PermanentAddressID] = @Original_PermanentAddressID) AND ([PermanentVillage] = @Original_PermanentVillage) AND ([PermanentRoad] = @Original_PermanentRoad) AND ([PermanentDistrict] = @Original_PermanentDistrict) AND ([PermanentUpazila] = @Original_PermanentUpazila) AND ([PermanentPostOffice] = @Original_PermanentPostOffice) AND ([PermanentPostCode] = @Original_PermanentPostCode) AND ([StudentID] = @Original_StudentID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentAddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentAddressID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentVillage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentVillage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentRoad", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentRoad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentDistrict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentDistrict", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentUpazila", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentUpazila", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentPostOffice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentPostOffice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentPostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentPostCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PermanentAddress] ([PermanentVillage], [PermanentRoad], [PermanentDistrict], [PermanentUpazila], [PermanentPostOffice], [PermanentPostCode], [StudentID]) VALUES (@PermanentVillage, @PermanentRoad, @PermanentDistrict, @PermanentUpazila, @PermanentPostOffice, @PermanentPostCode, @StudentID);
SELECT PermanentAddressID, PermanentVillage, PermanentRoad, PermanentDistrict, PermanentUpazila, PermanentPostOffice, PermanentPostCode, StudentID FROM PermanentAddress WHERE (PermanentAddressID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentVillage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentVillage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentRoad", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentRoad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentDistrict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentDistrict", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentUpazila", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentUpazila", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentPostOffice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentPostOffice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentPostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentPostCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PermanentAddress] SET [PermanentVillage] = @PermanentVillage, [PermanentRoad] = @PermanentRoad, [PermanentDistrict] = @PermanentDistrict, [PermanentUpazila] = @PermanentUpazila, [PermanentPostOffice] = @PermanentPostOffice, [PermanentPostCode] = @PermanentPostCode, [StudentID] = @StudentID WHERE (([PermanentAddressID] = @Original_PermanentAddressID) AND ([PermanentVillage] = @Original_PermanentVillage) AND ([PermanentRoad] = @Original_PermanentRoad) AND ([PermanentDistrict] = @Original_PermanentDistrict) AND ([PermanentUpazila] = @Original_PermanentUpazila) AND ([PermanentPostOffice] = @Original_PermanentPostOffice) AND ([PermanentPostCode] = @Original_PermanentPostCode) AND ([StudentID] = @Original_StudentID));
SELECT PermanentAddressID, PermanentVillage, PermanentRoad, PermanentDistrict, PermanentUpazila, PermanentPostOffice, PermanentPostCode, StudentID FROM PermanentAddress WHERE (PermanentAddressID = @PermanentAddressID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentVillage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentVillage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentRoad", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentRoad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentDistrict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentDistrict", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentUpazila", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentUpazila", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentPostOffice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentPostOffice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentPostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentPostCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentAddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentAddressID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentVillage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentVillage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentRoad", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentRoad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentDistrict", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentDistrict", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentUpazila", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentUpazila", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentPostOffice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentPostOffice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermanentPostCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentPostCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermanentAddressID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PermanentAddressID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Schools_Management_System.Properties.Settings.Default.schoolmanagementsystemConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PermanentAddressID, PermanentVillage, PermanentRoad, PermanentDistrict, Pe" +
                "rmanentUpazila, PermanentPostOffice, PermanentPostCode, StudentID FROM dbo.Perma" +
                "nentAddress";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StudentPaymentSystemsDataSet.PermanentAddressDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StudentPaymentSystemsDataSet.PermanentAddressDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            StudentPaymentSystemsDataSet.PermanentAddressDataTable dataTable = new StudentPaymentSystemsDataSet.PermanentAddressDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet.PermanentAddressDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PermanentAddress");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PermanentAddressID, string Original_PermanentVillage, string Original_PermanentRoad, string Original_PermanentDistrict, string Original_PermanentUpazila, string Original_PermanentPostOffice, string Original_PermanentPostCode, int Original_StudentID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PermanentAddressID));
            if ((Original_PermanentVillage == null)) {
                throw new global::System.ArgumentNullException("Original_PermanentVillage");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PermanentVillage));
            }
            if ((Original_PermanentRoad == null)) {
                throw new global::System.ArgumentNullException("Original_PermanentRoad");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PermanentRoad));
            }
            if ((Original_PermanentDistrict == null)) {
                throw new global::System.ArgumentNullException("Original_PermanentDistrict");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_PermanentDistrict));
            }
            if ((Original_PermanentUpazila == null)) {
                throw new global::System.ArgumentNullException("Original_PermanentUpazila");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PermanentUpazila));
            }
            if ((Original_PermanentPostOffice == null)) {
                throw new global::System.ArgumentNullException("Original_PermanentPostOffice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PermanentPostOffice));
            }
            if ((Original_PermanentPostCode == null)) {
                throw new global::System.ArgumentNullException("Original_PermanentPostCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PermanentPostCode));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PermanentVillage, string PermanentRoad, string PermanentDistrict, string PermanentUpazila, string PermanentPostOffice, string PermanentPostCode, int StudentID) {
            if ((PermanentVillage == null)) {
                throw new global::System.ArgumentNullException("PermanentVillage");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PermanentVillage));
            }
            if ((PermanentRoad == null)) {
                throw new global::System.ArgumentNullException("PermanentRoad");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PermanentRoad));
            }
            if ((PermanentDistrict == null)) {
                throw new global::System.ArgumentNullException("PermanentDistrict");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PermanentDistrict));
            }
            if ((PermanentUpazila == null)) {
                throw new global::System.ArgumentNullException("PermanentUpazila");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PermanentUpazila));
            }
            if ((PermanentPostOffice == null)) {
                throw new global::System.ArgumentNullException("PermanentPostOffice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PermanentPostOffice));
            }
            if ((PermanentPostCode == null)) {
                throw new global::System.ArgumentNullException("PermanentPostCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PermanentPostCode));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PermanentVillage, 
                    string PermanentRoad, 
                    string PermanentDistrict, 
                    string PermanentUpazila, 
                    string PermanentPostOffice, 
                    string PermanentPostCode, 
                    int StudentID, 
                    int Original_PermanentAddressID, 
                    string Original_PermanentVillage, 
                    string Original_PermanentRoad, 
                    string Original_PermanentDistrict, 
                    string Original_PermanentUpazila, 
                    string Original_PermanentPostOffice, 
                    string Original_PermanentPostCode, 
                    int Original_StudentID, 
                    int PermanentAddressID) {
            if ((PermanentVillage == null)) {
                throw new global::System.ArgumentNullException("PermanentVillage");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PermanentVillage));
            }
            if ((PermanentRoad == null)) {
                throw new global::System.ArgumentNullException("PermanentRoad");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PermanentRoad));
            }
            if ((PermanentDistrict == null)) {
                throw new global::System.ArgumentNullException("PermanentDistrict");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PermanentDistrict));
            }
            if ((PermanentUpazila == null)) {
                throw new global::System.ArgumentNullException("PermanentUpazila");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PermanentUpazila));
            }
            if ((PermanentPostOffice == null)) {
                throw new global::System.ArgumentNullException("PermanentPostOffice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PermanentPostOffice));
            }
            if ((PermanentPostCode == null)) {
                throw new global::System.ArgumentNullException("PermanentPostCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PermanentPostCode));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(StudentID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_PermanentAddressID));
            if ((Original_PermanentVillage == null)) {
                throw new global::System.ArgumentNullException("Original_PermanentVillage");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_PermanentVillage));
            }
            if ((Original_PermanentRoad == null)) {
                throw new global::System.ArgumentNullException("Original_PermanentRoad");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_PermanentRoad));
            }
            if ((Original_PermanentDistrict == null)) {
                throw new global::System.ArgumentNullException("Original_PermanentDistrict");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_PermanentDistrict));
            }
            if ((Original_PermanentUpazila == null)) {
                throw new global::System.ArgumentNullException("Original_PermanentUpazila");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_PermanentUpazila));
            }
            if ((Original_PermanentPostOffice == null)) {
                throw new global::System.ArgumentNullException("Original_PermanentPostOffice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_PermanentPostOffice));
            }
            if ((Original_PermanentPostCode == null)) {
                throw new global::System.ArgumentNullException("Original_PermanentPostCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_PermanentPostCode));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_StudentID));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(PermanentAddressID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PermanentVillage, string PermanentRoad, string PermanentDistrict, string PermanentUpazila, string PermanentPostOffice, string PermanentPostCode, int StudentID, int Original_PermanentAddressID, string Original_PermanentVillage, string Original_PermanentRoad, string Original_PermanentDistrict, string Original_PermanentUpazila, string Original_PermanentPostOffice, string Original_PermanentPostCode, int Original_StudentID) {
            return this.Update(PermanentVillage, PermanentRoad, PermanentDistrict, PermanentUpazila, PermanentPostOffice, PermanentPostCode, StudentID, Original_PermanentAddressID, Original_PermanentVillage, Original_PermanentRoad, Original_PermanentDistrict, Original_PermanentUpazila, Original_PermanentPostOffice, Original_PermanentPostCode, Original_StudentID, Original_PermanentAddressID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ImagesForAllTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ImagesForAllTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ImagesForAll";
            tableMapping.ColumnMappings.Add("ImageId", "ImageId");
            tableMapping.ColumnMappings.Add("ImagePath", "ImagePath");
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ImagesForAll] WHERE (([ImageId] = @Original_ImageId) AND ([Stu" +
                "dentID] = @Original_StudentID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ImagesForAll] ([ImagePath], [StudentID]) VALUES (@ImagePath, @" +
                "StudentID);\r\nSELECT ImageId, ImagePath, StudentID FROM ImagesForAll WHERE (Image" +
                "Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImagePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImagePath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ImagesForAll] SET [ImagePath] = @ImagePath, [StudentID] = @StudentI" +
                "D WHERE (([ImageId] = @Original_ImageId) AND ([StudentID] = @Original_StudentID)" +
                ");\r\nSELECT ImageId, ImagePath, StudentID FROM ImagesForAll WHERE (ImageId = @Ima" +
                "geId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImagePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImagePath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImageId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImageId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImageId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ImageId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Schools_Management_System.Properties.Settings.Default.schoolmanagementsystemConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ImageId, ImagePath, StudentID FROM dbo.ImagesForAll";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StudentPaymentSystemsDataSet.ImagesForAllDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StudentPaymentSystemsDataSet.ImagesForAllDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            StudentPaymentSystemsDataSet.ImagesForAllDataTable dataTable = new StudentPaymentSystemsDataSet.ImagesForAllDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet.ImagesForAllDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ImagesForAll");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ImageId, int Original_StudentID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ImageId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ImagePath, int StudentID) {
            if ((ImagePath == null)) {
                throw new global::System.ArgumentNullException("ImagePath");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ImagePath));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ImagePath, int StudentID, int Original_ImageId, int Original_StudentID, int ImageId) {
            if ((ImagePath == null)) {
                throw new global::System.ArgumentNullException("ImagePath");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ImagePath));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(StudentID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ImageId));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_StudentID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ImageId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ImagePath, int StudentID, int Original_ImageId, int Original_StudentID) {
            return this.Update(ImagePath, StudentID, Original_ImageId, Original_StudentID, Original_ImageId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GuirdianInformationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public GuirdianInformationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GuirdianInformation";
            tableMapping.ColumnMappings.Add("GuirdianID", "GuirdianID");
            tableMapping.ColumnMappings.Add("GuirdianName", "GuirdianName");
            tableMapping.ColumnMappings.Add("GuirdianGender", "GuirdianGender");
            tableMapping.ColumnMappings.Add("GuirdianOccupation", "GuirdianOccupation");
            tableMapping.ColumnMappings.Add("GuirdianRelation", "GuirdianRelation");
            tableMapping.ColumnMappings.Add("GuirdianEmail", "GuirdianEmail");
            tableMapping.ColumnMappings.Add("GuirdianMobile", "GuirdianMobile");
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[GuirdianInformation] WHERE (([GuirdianID] = @Original_GuirdianID) AND ([GuirdianName] = @Original_GuirdianName) AND ([GuirdianGender] = @Original_GuirdianGender) AND ([GuirdianOccupation] = @Original_GuirdianOccupation) AND ([GuirdianRelation] = @Original_GuirdianRelation) AND ([GuirdianEmail] = @Original_GuirdianEmail) AND ([GuirdianMobile] = @Original_GuirdianMobile) AND ([StudentID] = @Original_StudentID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianGender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianGender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianOccupation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianOccupation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianRelation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianRelation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianMobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianMobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[GuirdianInformation] ([GuirdianName], [GuirdianGender], [GuirdianOccupation], [GuirdianRelation], [GuirdianEmail], [GuirdianMobile], [StudentID]) VALUES (@GuirdianName, @GuirdianGender, @GuirdianOccupation, @GuirdianRelation, @GuirdianEmail, @GuirdianMobile, @StudentID);
SELECT GuirdianID, GuirdianName, GuirdianGender, GuirdianOccupation, GuirdianRelation, GuirdianEmail, GuirdianMobile, StudentID FROM GuirdianInformation WHERE (GuirdianID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianGender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianGender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianOccupation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianOccupation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianRelation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianMobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianMobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[GuirdianInformation] SET [GuirdianName] = @GuirdianName, [GuirdianGender] = @GuirdianGender, [GuirdianOccupation] = @GuirdianOccupation, [GuirdianRelation] = @GuirdianRelation, [GuirdianEmail] = @GuirdianEmail, [GuirdianMobile] = @GuirdianMobile, [StudentID] = @StudentID WHERE (([GuirdianID] = @Original_GuirdianID) AND ([GuirdianName] = @Original_GuirdianName) AND ([GuirdianGender] = @Original_GuirdianGender) AND ([GuirdianOccupation] = @Original_GuirdianOccupation) AND ([GuirdianRelation] = @Original_GuirdianRelation) AND ([GuirdianEmail] = @Original_GuirdianEmail) AND ([GuirdianMobile] = @Original_GuirdianMobile) AND ([StudentID] = @Original_StudentID));
SELECT GuirdianID, GuirdianName, GuirdianGender, GuirdianOccupation, GuirdianRelation, GuirdianEmail, GuirdianMobile, StudentID FROM GuirdianInformation WHERE (GuirdianID = @GuirdianID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianGender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianGender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianOccupation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianOccupation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianRelation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianMobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianMobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianGender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianGender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianOccupation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianOccupation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianRelation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianRelation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuirdianMobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianMobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuirdianID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "GuirdianID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Schools_Management_System.Properties.Settings.Default.schoolmanagementsystemConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT GuirdianID, GuirdianName, GuirdianGender, GuirdianOccupation, GuirdianRela" +
                "tion, GuirdianEmail, GuirdianMobile, StudentID FROM dbo.GuirdianInformation";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StudentPaymentSystemsDataSet.GuirdianInformationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StudentPaymentSystemsDataSet.GuirdianInformationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            StudentPaymentSystemsDataSet.GuirdianInformationDataTable dataTable = new StudentPaymentSystemsDataSet.GuirdianInformationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet.GuirdianInformationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "GuirdianInformation");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_GuirdianID, string Original_GuirdianName, string Original_GuirdianGender, string Original_GuirdianOccupation, string Original_GuirdianRelation, string Original_GuirdianEmail, string Original_GuirdianMobile, int Original_StudentID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_GuirdianID));
            if ((Original_GuirdianName == null)) {
                throw new global::System.ArgumentNullException("Original_GuirdianName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_GuirdianName));
            }
            if ((Original_GuirdianGender == null)) {
                throw new global::System.ArgumentNullException("Original_GuirdianGender");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_GuirdianGender));
            }
            if ((Original_GuirdianOccupation == null)) {
                throw new global::System.ArgumentNullException("Original_GuirdianOccupation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_GuirdianOccupation));
            }
            if ((Original_GuirdianRelation == null)) {
                throw new global::System.ArgumentNullException("Original_GuirdianRelation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_GuirdianRelation));
            }
            if ((Original_GuirdianEmail == null)) {
                throw new global::System.ArgumentNullException("Original_GuirdianEmail");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_GuirdianEmail));
            }
            if ((Original_GuirdianMobile == null)) {
                throw new global::System.ArgumentNullException("Original_GuirdianMobile");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_GuirdianMobile));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string GuirdianName, string GuirdianGender, string GuirdianOccupation, string GuirdianRelation, string GuirdianEmail, string GuirdianMobile, int StudentID) {
            if ((GuirdianName == null)) {
                throw new global::System.ArgumentNullException("GuirdianName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(GuirdianName));
            }
            if ((GuirdianGender == null)) {
                throw new global::System.ArgumentNullException("GuirdianGender");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(GuirdianGender));
            }
            if ((GuirdianOccupation == null)) {
                throw new global::System.ArgumentNullException("GuirdianOccupation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(GuirdianOccupation));
            }
            if ((GuirdianRelation == null)) {
                throw new global::System.ArgumentNullException("GuirdianRelation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(GuirdianRelation));
            }
            if ((GuirdianEmail == null)) {
                throw new global::System.ArgumentNullException("GuirdianEmail");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(GuirdianEmail));
            }
            if ((GuirdianMobile == null)) {
                throw new global::System.ArgumentNullException("GuirdianMobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(GuirdianMobile));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string GuirdianName, 
                    string GuirdianGender, 
                    string GuirdianOccupation, 
                    string GuirdianRelation, 
                    string GuirdianEmail, 
                    string GuirdianMobile, 
                    int StudentID, 
                    int Original_GuirdianID, 
                    string Original_GuirdianName, 
                    string Original_GuirdianGender, 
                    string Original_GuirdianOccupation, 
                    string Original_GuirdianRelation, 
                    string Original_GuirdianEmail, 
                    string Original_GuirdianMobile, 
                    int Original_StudentID, 
                    int GuirdianID) {
            if ((GuirdianName == null)) {
                throw new global::System.ArgumentNullException("GuirdianName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(GuirdianName));
            }
            if ((GuirdianGender == null)) {
                throw new global::System.ArgumentNullException("GuirdianGender");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(GuirdianGender));
            }
            if ((GuirdianOccupation == null)) {
                throw new global::System.ArgumentNullException("GuirdianOccupation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(GuirdianOccupation));
            }
            if ((GuirdianRelation == null)) {
                throw new global::System.ArgumentNullException("GuirdianRelation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(GuirdianRelation));
            }
            if ((GuirdianEmail == null)) {
                throw new global::System.ArgumentNullException("GuirdianEmail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(GuirdianEmail));
            }
            if ((GuirdianMobile == null)) {
                throw new global::System.ArgumentNullException("GuirdianMobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(GuirdianMobile));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(StudentID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_GuirdianID));
            if ((Original_GuirdianName == null)) {
                throw new global::System.ArgumentNullException("Original_GuirdianName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_GuirdianName));
            }
            if ((Original_GuirdianGender == null)) {
                throw new global::System.ArgumentNullException("Original_GuirdianGender");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_GuirdianGender));
            }
            if ((Original_GuirdianOccupation == null)) {
                throw new global::System.ArgumentNullException("Original_GuirdianOccupation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_GuirdianOccupation));
            }
            if ((Original_GuirdianRelation == null)) {
                throw new global::System.ArgumentNullException("Original_GuirdianRelation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_GuirdianRelation));
            }
            if ((Original_GuirdianEmail == null)) {
                throw new global::System.ArgumentNullException("Original_GuirdianEmail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_GuirdianEmail));
            }
            if ((Original_GuirdianMobile == null)) {
                throw new global::System.ArgumentNullException("Original_GuirdianMobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_GuirdianMobile));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_StudentID));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(GuirdianID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string GuirdianName, string GuirdianGender, string GuirdianOccupation, string GuirdianRelation, string GuirdianEmail, string GuirdianMobile, int StudentID, int Original_GuirdianID, string Original_GuirdianName, string Original_GuirdianGender, string Original_GuirdianOccupation, string Original_GuirdianRelation, string Original_GuirdianEmail, string Original_GuirdianMobile, int Original_StudentID) {
            return this.Update(GuirdianName, GuirdianGender, GuirdianOccupation, GuirdianRelation, GuirdianEmail, GuirdianMobile, StudentID, Original_GuirdianID, Original_GuirdianName, Original_GuirdianGender, Original_GuirdianOccupation, Original_GuirdianRelation, Original_GuirdianEmail, Original_GuirdianMobile, Original_StudentID, Original_GuirdianID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StudentShiftInfoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public StudentShiftInfoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StudentShiftInfo";
            tableMapping.ColumnMappings.Add("ShiftID", "ShiftID");
            tableMapping.ColumnMappings.Add("ShiftName", "ShiftName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[StudentShiftInfo] WHERE (([ShiftID] = @Original_ShiftID) AND (" +
                "[ShiftName] = @Original_ShiftName))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShiftID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShiftName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[StudentShiftInfo] ([ShiftName]) VALUES (@ShiftName);\r\nSELECT S" +
                "hiftID, ShiftName FROM StudentShiftInfo WHERE (ShiftID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShiftName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[StudentShiftInfo] SET [ShiftName] = @ShiftName WHERE (([ShiftID] = " +
                "@Original_ShiftID) AND ([ShiftName] = @Original_ShiftName));\r\nSELECT ShiftID, Sh" +
                "iftName FROM StudentShiftInfo WHERE (ShiftID = @ShiftID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShiftName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShiftID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShiftName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShiftID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Schools_Management_System.Properties.Settings.Default.schoolmanagementsystemConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ShiftID, ShiftName FROM dbo.StudentShiftInfo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StudentPaymentSystemsDataSet.StudentShiftInfoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StudentPaymentSystemsDataSet.StudentShiftInfoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            StudentPaymentSystemsDataSet.StudentShiftInfoDataTable dataTable = new StudentPaymentSystemsDataSet.StudentShiftInfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet.StudentShiftInfoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "StudentShiftInfo");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ShiftID, string Original_ShiftName) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ShiftID));
            if ((Original_ShiftName == null)) {
                throw new global::System.ArgumentNullException("Original_ShiftName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ShiftName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ShiftName) {
            if ((ShiftName == null)) {
                throw new global::System.ArgumentNullException("ShiftName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ShiftName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ShiftName, int Original_ShiftID, string Original_ShiftName, int ShiftID) {
            if ((ShiftName == null)) {
                throw new global::System.ArgumentNullException("ShiftName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ShiftName));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ShiftID));
            if ((Original_ShiftName == null)) {
                throw new global::System.ArgumentNullException("Original_ShiftName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_ShiftName));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ShiftID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ShiftName, int Original_ShiftID, string Original_ShiftName) {
            return this.Update(ShiftName, Original_ShiftID, Original_ShiftName, Original_ShiftID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StudentMonthlyFeesDataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public StudentMonthlyFeesDataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StudentMonthlyFeesData";
            tableMapping.ColumnMappings.Add("MonthlyFeesDataID", "MonthlyFeesDataID");
            tableMapping.ColumnMappings.Add("MonthlyPaymentFor", "MonthlyPaymentFor");
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[StudentMonthlyFeesData] WHERE (([MonthlyFeesDataID] = @Origina" +
                "l_MonthlyFeesDataID) AND ([StudentID] = @Original_StudentID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MonthlyFeesDataID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyFeesDataID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[StudentMonthlyFeesData] ([MonthlyPaymentFor], [StudentID]) VAL" +
                "UES (@MonthlyPaymentFor, @StudentID);\r\nSELECT MonthlyFeesDataID, MonthlyPaymentF" +
                "or, StudentID FROM StudentMonthlyFeesData WHERE (MonthlyFeesDataID = SCOPE_IDENT" +
                "ITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthlyPaymentFor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyPaymentFor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[StudentMonthlyFeesData] SET [MonthlyPaymentFor] = @MonthlyPaymentFor, [StudentID] = @StudentID WHERE (([MonthlyFeesDataID] = @Original_MonthlyFeesDataID) AND ([StudentID] = @Original_StudentID));
SELECT MonthlyFeesDataID, MonthlyPaymentFor, StudentID FROM StudentMonthlyFeesData WHERE (MonthlyFeesDataID = @MonthlyFeesDataID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthlyPaymentFor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyPaymentFor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MonthlyFeesDataID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyFeesDataID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthlyFeesDataID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyFeesDataID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Schools_Management_System.Properties.Settings.Default.schoolmanagementsystemConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MonthlyFeesDataID, MonthlyPaymentFor, StudentID FROM dbo.StudentMonthlyFee" +
                "sData";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StudentPaymentSystemsDataSet.StudentMonthlyFeesDataDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StudentPaymentSystemsDataSet.StudentMonthlyFeesDataDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            StudentPaymentSystemsDataSet.StudentMonthlyFeesDataDataTable dataTable = new StudentPaymentSystemsDataSet.StudentMonthlyFeesDataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet.StudentMonthlyFeesDataDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "StudentMonthlyFeesData");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MonthlyFeesDataID, int Original_StudentID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MonthlyFeesDataID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MonthlyPaymentFor, int StudentID) {
            if ((MonthlyPaymentFor == null)) {
                throw new global::System.ArgumentNullException("MonthlyPaymentFor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MonthlyPaymentFor));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MonthlyPaymentFor, int StudentID, int Original_MonthlyFeesDataID, int Original_StudentID, int MonthlyFeesDataID) {
            if ((MonthlyPaymentFor == null)) {
                throw new global::System.ArgumentNullException("MonthlyPaymentFor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MonthlyPaymentFor));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(StudentID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_MonthlyFeesDataID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_StudentID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(MonthlyFeesDataID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MonthlyPaymentFor, int StudentID, int Original_MonthlyFeesDataID, int Original_StudentID) {
            return this.Update(MonthlyPaymentFor, StudentID, Original_MonthlyFeesDataID, Original_StudentID, Original_MonthlyFeesDataID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StudentMonthlyFeesAmountTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public StudentMonthlyFeesAmountTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StudentMonthlyFeesAmount";
            tableMapping.ColumnMappings.Add("MonthlyFeesAmountID", "MonthlyFeesAmountID");
            tableMapping.ColumnMappings.Add("MonthlyFeeAmountFor", "MonthlyFeeAmountFor");
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[StudentMonthlyFeesAmount] WHERE (([MonthlyFeesAmountID] = @Ori" +
                "ginal_MonthlyFeesAmountID) AND ([MonthlyFeeAmountFor] = @Original_MonthlyFeeAmou" +
                "ntFor) AND ([StudentID] = @Original_StudentID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MonthlyFeesAmountID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyFeesAmountID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MonthlyFeeAmountFor", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyFeeAmountFor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[StudentMonthlyFeesAmount] ([MonthlyFeeAmountFor], [StudentID]) VALUES (@MonthlyFeeAmountFor, @StudentID);
SELECT MonthlyFeesAmountID, MonthlyFeeAmountFor, StudentID FROM StudentMonthlyFeesAmount WHERE (MonthlyFeesAmountID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthlyFeeAmountFor", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyFeeAmountFor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[StudentMonthlyFeesAmount] SET [MonthlyFeeAmountFor] = @MonthlyFeeAmountFor, [StudentID] = @StudentID WHERE (([MonthlyFeesAmountID] = @Original_MonthlyFeesAmountID) AND ([MonthlyFeeAmountFor] = @Original_MonthlyFeeAmountFor) AND ([StudentID] = @Original_StudentID));
SELECT MonthlyFeesAmountID, MonthlyFeeAmountFor, StudentID FROM StudentMonthlyFeesAmount WHERE (MonthlyFeesAmountID = @MonthlyFeesAmountID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthlyFeeAmountFor", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyFeeAmountFor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MonthlyFeesAmountID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyFeesAmountID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MonthlyFeeAmountFor", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyFeeAmountFor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthlyFeesAmountID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyFeesAmountID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Schools_Management_System.Properties.Settings.Default.schoolmanagementsystemConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MonthlyFeesAmountID, MonthlyFeeAmountFor, StudentID FROM dbo.StudentMonthl" +
                "yFeesAmount";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StudentPaymentSystemsDataSet.StudentMonthlyFeesAmountDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StudentPaymentSystemsDataSet.StudentMonthlyFeesAmountDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            StudentPaymentSystemsDataSet.StudentMonthlyFeesAmountDataTable dataTable = new StudentPaymentSystemsDataSet.StudentMonthlyFeesAmountDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet.StudentMonthlyFeesAmountDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "StudentMonthlyFeesAmount");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MonthlyFeesAmountID, decimal Original_MonthlyFeeAmountFor, int Original_StudentID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MonthlyFeesAmountID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_MonthlyFeeAmountFor));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal MonthlyFeeAmountFor, int StudentID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(MonthlyFeeAmountFor));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(StudentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal MonthlyFeeAmountFor, int StudentID, int Original_MonthlyFeesAmountID, decimal Original_MonthlyFeeAmountFor, int Original_StudentID, int MonthlyFeesAmountID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(MonthlyFeeAmountFor));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(StudentID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_MonthlyFeesAmountID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_MonthlyFeeAmountFor));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_StudentID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(MonthlyFeesAmountID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal MonthlyFeeAmountFor, int StudentID, int Original_MonthlyFeesAmountID, decimal Original_MonthlyFeeAmountFor, int Original_StudentID) {
            return this.Update(MonthlyFeeAmountFor, StudentID, Original_MonthlyFeesAmountID, Original_MonthlyFeeAmountFor, Original_StudentID, Original_MonthlyFeesAmountID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StudentMonthlyFeeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public StudentMonthlyFeeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StudentMonthlyFee";
            tableMapping.ColumnMappings.Add("PayID", "PayID");
            tableMapping.ColumnMappings.Add("PaidAmount", "PaidAmount");
            tableMapping.ColumnMappings.Add("TotalAmount", "TotalAmount");
            tableMapping.ColumnMappings.Add("AmountPayDate", "AmountPayDate");
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[StudentMonthlyFee] WHERE (([PayID] = @Original_PayID) AND ([PaidAmount] = @Original_PaidAmount) AND ([TotalAmount] = @Original_TotalAmount) AND ([AmountPayDate] = @Original_AmountPayDate) AND ((@IsNull_StudentID = 1 AND [StudentID] IS NULL) OR ([StudentID] = @Original_StudentID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaidAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmountPayDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmountPayDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[StudentMonthlyFee] ([PaidAmount], [TotalAmount], [AmountPayDate], [StudentID]) VALUES (@PaidAmount, @TotalAmount, @AmountPayDate, @StudentID);
SELECT PayID, PaidAmount, TotalAmount, AmountPayDate, StudentID FROM StudentMonthlyFee WHERE (PayID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaidAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmountPayDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmountPayDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[StudentMonthlyFee] SET [PaidAmount] = @PaidAmount, [TotalAmount] = @TotalAmount, [AmountPayDate] = @AmountPayDate, [StudentID] = @StudentID WHERE (([PayID] = @Original_PayID) AND ([PaidAmount] = @Original_PaidAmount) AND ([TotalAmount] = @Original_TotalAmount) AND ([AmountPayDate] = @Original_AmountPayDate) AND ((@IsNull_StudentID = 1 AND [StudentID] IS NULL) OR ([StudentID] = @Original_StudentID)));
SELECT PayID, PaidAmount, TotalAmount, AmountPayDate, StudentID FROM StudentMonthlyFee WHERE (PayID = @PayID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaidAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmountPayDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmountPayDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PayID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaidAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmountPayDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmountPayDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PayID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Schools_Management_System.Properties.Settings.Default.schoolmanagementsystemConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PayID, PaidAmount, TotalAmount, AmountPayDate, StudentID FROM dbo.StudentM" +
                "onthlyFee";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StudentPaymentSystemsDataSet.StudentMonthlyFeeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StudentPaymentSystemsDataSet.StudentMonthlyFeeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            StudentPaymentSystemsDataSet.StudentMonthlyFeeDataTable dataTable = new StudentPaymentSystemsDataSet.StudentMonthlyFeeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet.StudentMonthlyFeeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(StudentPaymentSystemsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "StudentMonthlyFee");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PayID, decimal Original_PaidAmount, decimal Original_TotalAmount, System.DateTime Original_AmountPayDate, global::System.Nullable<int> Original_StudentID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PayID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_PaidAmount));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_TotalAmount));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_AmountPayDate));
            if ((Original_StudentID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_StudentID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal PaidAmount, decimal TotalAmount, System.DateTime AmountPayDate, global::System.Nullable<int> StudentID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(PaidAmount));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(TotalAmount));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(AmountPayDate));
            if ((StudentID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(StudentID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PaidAmount, decimal TotalAmount, System.DateTime AmountPayDate, global::System.Nullable<int> StudentID, int Original_PayID, decimal Original_PaidAmount, decimal Original_TotalAmount, System.DateTime Original_AmountPayDate, global::System.Nullable<int> Original_StudentID, int PayID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(PaidAmount));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(TotalAmount));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(AmountPayDate));
            if ((StudentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(StudentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_PayID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_PaidAmount));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_TotalAmount));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_AmountPayDate));
            if ((Original_StudentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_StudentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(PayID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PaidAmount, decimal TotalAmount, System.DateTime AmountPayDate, global::System.Nullable<int> StudentID, int Original_PayID, decimal Original_PaidAmount, decimal Original_TotalAmount, System.DateTime Original_AmountPayDate, global::System.Nullable<int> Original_StudentID) {
            return this.Update(PaidAmount, TotalAmount, AmountPayDate, StudentID, Original_PayID, Original_PaidAmount, Original_TotalAmount, Original_AmountPayDate, Original_StudentID, Original_PayID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private StudentInformationTableAdapter _studentInformationTableAdapter;
        
        private PresentAddressTableAdapter _presentAddressTableAdapter;
        
        private PermanentAddressTableAdapter _permanentAddressTableAdapter;
        
        private ImagesForAllTableAdapter _imagesForAllTableAdapter;
        
        private GuirdianInformationTableAdapter _guirdianInformationTableAdapter;
        
        private StudentShiftInfoTableAdapter _studentShiftInfoTableAdapter;
        
        private StudentMonthlyFeesDataTableAdapter _studentMonthlyFeesDataTableAdapter;
        
        private StudentMonthlyFeesAmountTableAdapter _studentMonthlyFeesAmountTableAdapter;
        
        private StudentMonthlyFeeTableAdapter _studentMonthlyFeeTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StudentInformationTableAdapter StudentInformationTableAdapter {
            get {
                return this._studentInformationTableAdapter;
            }
            set {
                this._studentInformationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PresentAddressTableAdapter PresentAddressTableAdapter {
            get {
                return this._presentAddressTableAdapter;
            }
            set {
                this._presentAddressTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PermanentAddressTableAdapter PermanentAddressTableAdapter {
            get {
                return this._permanentAddressTableAdapter;
            }
            set {
                this._permanentAddressTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ImagesForAllTableAdapter ImagesForAllTableAdapter {
            get {
                return this._imagesForAllTableAdapter;
            }
            set {
                this._imagesForAllTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public GuirdianInformationTableAdapter GuirdianInformationTableAdapter {
            get {
                return this._guirdianInformationTableAdapter;
            }
            set {
                this._guirdianInformationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StudentShiftInfoTableAdapter StudentShiftInfoTableAdapter {
            get {
                return this._studentShiftInfoTableAdapter;
            }
            set {
                this._studentShiftInfoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StudentMonthlyFeesDataTableAdapter StudentMonthlyFeesDataTableAdapter {
            get {
                return this._studentMonthlyFeesDataTableAdapter;
            }
            set {
                this._studentMonthlyFeesDataTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StudentMonthlyFeesAmountTableAdapter StudentMonthlyFeesAmountTableAdapter {
            get {
                return this._studentMonthlyFeesAmountTableAdapter;
            }
            set {
                this._studentMonthlyFeesAmountTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StudentMonthlyFeeTableAdapter StudentMonthlyFeeTableAdapter {
            get {
                return this._studentMonthlyFeeTableAdapter;
            }
            set {
                this._studentMonthlyFeeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._studentInformationTableAdapter != null) 
                            && (this._studentInformationTableAdapter.Connection != null))) {
                    return this._studentInformationTableAdapter.Connection;
                }
                if (((this._presentAddressTableAdapter != null) 
                            && (this._presentAddressTableAdapter.Connection != null))) {
                    return this._presentAddressTableAdapter.Connection;
                }
                if (((this._permanentAddressTableAdapter != null) 
                            && (this._permanentAddressTableAdapter.Connection != null))) {
                    return this._permanentAddressTableAdapter.Connection;
                }
                if (((this._imagesForAllTableAdapter != null) 
                            && (this._imagesForAllTableAdapter.Connection != null))) {
                    return this._imagesForAllTableAdapter.Connection;
                }
                if (((this._guirdianInformationTableAdapter != null) 
                            && (this._guirdianInformationTableAdapter.Connection != null))) {
                    return this._guirdianInformationTableAdapter.Connection;
                }
                if (((this._studentShiftInfoTableAdapter != null) 
                            && (this._studentShiftInfoTableAdapter.Connection != null))) {
                    return this._studentShiftInfoTableAdapter.Connection;
                }
                if (((this._studentMonthlyFeesDataTableAdapter != null) 
                            && (this._studentMonthlyFeesDataTableAdapter.Connection != null))) {
                    return this._studentMonthlyFeesDataTableAdapter.Connection;
                }
                if (((this._studentMonthlyFeesAmountTableAdapter != null) 
                            && (this._studentMonthlyFeesAmountTableAdapter.Connection != null))) {
                    return this._studentMonthlyFeesAmountTableAdapter.Connection;
                }
                if (((this._studentMonthlyFeeTableAdapter != null) 
                            && (this._studentMonthlyFeeTableAdapter.Connection != null))) {
                    return this._studentMonthlyFeeTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._studentInformationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._presentAddressTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._permanentAddressTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._imagesForAllTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._guirdianInformationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._studentShiftInfoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._studentMonthlyFeesDataTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._studentMonthlyFeesAmountTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._studentMonthlyFeeTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(StudentPaymentSystemsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._studentShiftInfoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StudentShiftInfo.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._studentShiftInfoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._studentInformationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StudentInformation.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._studentInformationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._presentAddressTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PresentAddress.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._presentAddressTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._permanentAddressTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PermanentAddress.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._permanentAddressTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._imagesForAllTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ImagesForAll.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._imagesForAllTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._guirdianInformationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.GuirdianInformation.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._guirdianInformationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._studentMonthlyFeesDataTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StudentMonthlyFeesData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._studentMonthlyFeesDataTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._studentMonthlyFeesAmountTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StudentMonthlyFeesAmount.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._studentMonthlyFeesAmountTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._studentMonthlyFeeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StudentMonthlyFee.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._studentMonthlyFeeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(StudentPaymentSystemsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._studentShiftInfoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StudentShiftInfo.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._studentShiftInfoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._studentInformationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StudentInformation.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._studentInformationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._presentAddressTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PresentAddress.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._presentAddressTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._permanentAddressTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PermanentAddress.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._permanentAddressTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._imagesForAllTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ImagesForAll.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._imagesForAllTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._guirdianInformationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.GuirdianInformation.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._guirdianInformationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._studentMonthlyFeesDataTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StudentMonthlyFeesData.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._studentMonthlyFeesDataTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._studentMonthlyFeesAmountTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StudentMonthlyFeesAmount.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._studentMonthlyFeesAmountTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._studentMonthlyFeeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StudentMonthlyFee.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._studentMonthlyFeeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(StudentPaymentSystemsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._studentMonthlyFeeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StudentMonthlyFee.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._studentMonthlyFeeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._studentMonthlyFeesAmountTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StudentMonthlyFeesAmount.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._studentMonthlyFeesAmountTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._studentMonthlyFeesDataTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StudentMonthlyFeesData.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._studentMonthlyFeesDataTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._guirdianInformationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.GuirdianInformation.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._guirdianInformationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._imagesForAllTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ImagesForAll.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._imagesForAllTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._permanentAddressTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PermanentAddress.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._permanentAddressTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._presentAddressTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PresentAddress.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._presentAddressTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._studentInformationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StudentInformation.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._studentInformationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._studentShiftInfoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StudentShiftInfo.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._studentShiftInfoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(StudentPaymentSystemsDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._studentInformationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._studentInformationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._presentAddressTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._presentAddressTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._permanentAddressTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._permanentAddressTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._imagesForAllTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._imagesForAllTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._guirdianInformationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._guirdianInformationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._studentShiftInfoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._studentShiftInfoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._studentMonthlyFeesDataTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._studentMonthlyFeesDataTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._studentMonthlyFeesAmountTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._studentMonthlyFeesAmountTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._studentMonthlyFeeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._studentMonthlyFeeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._studentInformationTableAdapter != null)) {
                    revertConnections.Add(this._studentInformationTableAdapter, this._studentInformationTableAdapter.Connection);
                    this._studentInformationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._studentInformationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._studentInformationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._studentInformationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._studentInformationTableAdapter.Adapter);
                    }
                }
                if ((this._presentAddressTableAdapter != null)) {
                    revertConnections.Add(this._presentAddressTableAdapter, this._presentAddressTableAdapter.Connection);
                    this._presentAddressTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._presentAddressTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._presentAddressTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._presentAddressTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._presentAddressTableAdapter.Adapter);
                    }
                }
                if ((this._permanentAddressTableAdapter != null)) {
                    revertConnections.Add(this._permanentAddressTableAdapter, this._permanentAddressTableAdapter.Connection);
                    this._permanentAddressTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._permanentAddressTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._permanentAddressTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._permanentAddressTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._permanentAddressTableAdapter.Adapter);
                    }
                }
                if ((this._imagesForAllTableAdapter != null)) {
                    revertConnections.Add(this._imagesForAllTableAdapter, this._imagesForAllTableAdapter.Connection);
                    this._imagesForAllTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._imagesForAllTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._imagesForAllTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._imagesForAllTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._imagesForAllTableAdapter.Adapter);
                    }
                }
                if ((this._guirdianInformationTableAdapter != null)) {
                    revertConnections.Add(this._guirdianInformationTableAdapter, this._guirdianInformationTableAdapter.Connection);
                    this._guirdianInformationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._guirdianInformationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._guirdianInformationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._guirdianInformationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._guirdianInformationTableAdapter.Adapter);
                    }
                }
                if ((this._studentShiftInfoTableAdapter != null)) {
                    revertConnections.Add(this._studentShiftInfoTableAdapter, this._studentShiftInfoTableAdapter.Connection);
                    this._studentShiftInfoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._studentShiftInfoTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._studentShiftInfoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._studentShiftInfoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._studentShiftInfoTableAdapter.Adapter);
                    }
                }
                if ((this._studentMonthlyFeesDataTableAdapter != null)) {
                    revertConnections.Add(this._studentMonthlyFeesDataTableAdapter, this._studentMonthlyFeesDataTableAdapter.Connection);
                    this._studentMonthlyFeesDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._studentMonthlyFeesDataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._studentMonthlyFeesDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._studentMonthlyFeesDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._studentMonthlyFeesDataTableAdapter.Adapter);
                    }
                }
                if ((this._studentMonthlyFeesAmountTableAdapter != null)) {
                    revertConnections.Add(this._studentMonthlyFeesAmountTableAdapter, this._studentMonthlyFeesAmountTableAdapter.Connection);
                    this._studentMonthlyFeesAmountTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._studentMonthlyFeesAmountTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._studentMonthlyFeesAmountTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._studentMonthlyFeesAmountTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._studentMonthlyFeesAmountTableAdapter.Adapter);
                    }
                }
                if ((this._studentMonthlyFeeTableAdapter != null)) {
                    revertConnections.Add(this._studentMonthlyFeeTableAdapter, this._studentMonthlyFeeTableAdapter.Connection);
                    this._studentMonthlyFeeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._studentMonthlyFeeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._studentMonthlyFeeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._studentMonthlyFeeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._studentMonthlyFeeTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._studentInformationTableAdapter != null)) {
                    this._studentInformationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._studentInformationTableAdapter]));
                    this._studentInformationTableAdapter.Transaction = null;
                }
                if ((this._presentAddressTableAdapter != null)) {
                    this._presentAddressTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._presentAddressTableAdapter]));
                    this._presentAddressTableAdapter.Transaction = null;
                }
                if ((this._permanentAddressTableAdapter != null)) {
                    this._permanentAddressTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._permanentAddressTableAdapter]));
                    this._permanentAddressTableAdapter.Transaction = null;
                }
                if ((this._imagesForAllTableAdapter != null)) {
                    this._imagesForAllTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._imagesForAllTableAdapter]));
                    this._imagesForAllTableAdapter.Transaction = null;
                }
                if ((this._guirdianInformationTableAdapter != null)) {
                    this._guirdianInformationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._guirdianInformationTableAdapter]));
                    this._guirdianInformationTableAdapter.Transaction = null;
                }
                if ((this._studentShiftInfoTableAdapter != null)) {
                    this._studentShiftInfoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._studentShiftInfoTableAdapter]));
                    this._studentShiftInfoTableAdapter.Transaction = null;
                }
                if ((this._studentMonthlyFeesDataTableAdapter != null)) {
                    this._studentMonthlyFeesDataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._studentMonthlyFeesDataTableAdapter]));
                    this._studentMonthlyFeesDataTableAdapter.Transaction = null;
                }
                if ((this._studentMonthlyFeesAmountTableAdapter != null)) {
                    this._studentMonthlyFeesAmountTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._studentMonthlyFeesAmountTableAdapter]));
                    this._studentMonthlyFeesAmountTableAdapter.Transaction = null;
                }
                if ((this._studentMonthlyFeeTableAdapter != null)) {
                    this._studentMonthlyFeeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._studentMonthlyFeeTableAdapter]));
                    this._studentMonthlyFeeTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591